{"_id":"htmlparser2","_rev":"81-3962876a4684b15b65e83ada0d2bd771","name":"htmlparser2","description":"Fast & forgiving HTML/XML/RSS parser","dist-tags":{"latest":"3.1.3"},"versions":{"1.0.0":{"name":"htmlparser2","description":"Forgiving HTML/XML/RSS Parser for Node. This version is optimised and cleaned and provides a SAX interface (EventedHandler).","version":"1.0.0","author":{"name":"Felix Boehm","email":"me@feedic.com"},"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"email":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"./lib/"},"main":"./lib/htmlparser","engines":{"node":">0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"_id":"htmlparser2@1.0.0","_engineSupported":true,"_npmVersion":"1.0.1rc5","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"5bc30aa170e439652cdaeafc80c7cf8c20534af2","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-1.0.0.tgz"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"1.1.0":{"name":"htmlparser2","description":"Forgiving HTML/XML/RSS Parser for Node. This version is optimised and cleaned and provides a SAX interface (EventedHandler).","version":"1.1.0","author":{"name":"Felix Boehm","email":"me@feedic.com"},"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"email":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"./lib/"},"main":"./lib/htmlparser","engines":{"node":">0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"_id":"htmlparser2@1.1.0","_engineSupported":true,"_npmVersion":"1.0.1rc5","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"7449d714006d3f0f6c5cfff771ca1f7250431b0f","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-1.1.0.tgz"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"1.5.0":{"name":"htmlparser2","description":"Forgiving HTML/XML/RSS Parser for Node. This version is optimised and cleaned and provides a SAX interface (EventedHandler).","version":"1.5.0","author":{"name":"Felix Boehm","email":"me@feedic.com"},"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"email":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"./lib/"},"main":"./lib/","engines":{"node":">0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"_npmUser":{"name":"feedic","email":"me@feedic.com"},"_id":"htmlparser2@1.5.0","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.103","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"f579bbd9f3a7a58c966f7b39fae8c80ca08cfddd","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-1.5.0.tgz"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"2.0.0":{"name":"htmlparser2","description":"Forgiving HTML/XML/RSS Parser for Node. This version is optimised and cleaned and provides a SAX interface.","version":"2.0.0","author":{"name":"Felix Boehm","email":"me@feedic.com"},"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"email":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"./lib/"},"main":"./lib/","scripts":{"test":"cd tests && node 00-runtests.js"},"engines":{"node":">0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"_npmUser":{"name":"feedic","email":"me@feedic.com"},"_id":"htmlparser2@2.0.0","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.2","_defaultsLoaded":true,"dist":{"shasum":"4f3726cb094c0075c09adcb068cfe9718de87a8b","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-2.0.0.tgz"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"2.0.1":{"name":"htmlparser2","description":"Forgiving HTML/XML/RSS Parser for Node. This version is optimised and cleaned and provides a SAX interface.","version":"2.0.1","author":{"name":"Felix Boehm","email":"me@feedic.com"},"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"email":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"./lib/"},"main":"./lib/","scripts":{"test":"cd tests && node 00-runtests.js"},"engines":{"node":">0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"_npmUser":{"name":"feedic","email":"me@feedic.com"},"_id":"htmlparser2@2.0.1","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.4","_defaultsLoaded":true,"dist":{"shasum":"73a9d3e9e30f051e7473ef71f6638581c7588fea","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-2.0.1.tgz"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"2.1.0":{"name":"htmlparser2","description":"Forgiving HTML/XML/RSS Parser for Node. This version is optimised and cleaned and provides a SAX interface.","version":"2.1.0","author":{"name":"Felix Boehm","email":"me@feedic.com"},"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"email":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"./lib/"},"main":"./lib/","scripts":{"test":"cd tests && node 00-runtests.js"},"engines":{"node":">0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"_npmUser":{"name":"feedic","email":"me@feedic.com"},"_id":"htmlparser2@2.1.0","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.6","_defaultsLoaded":true,"dist":{"shasum":"b3f2fed1dd81e0f62772756537322080d6cf4408","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-2.1.0.tgz"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"2.1.1":{"name":"htmlparser2","description":"Forgiving HTML/XML/RSS Parser for Node. This version is optimised and cleaned and provides a SAX interface.","version":"2.1.1","author":{"name":"Felix Boehm","email":"me@feedic.com"},"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"email":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"./lib/"},"main":"./lib/","scripts":{"test":"cd tests && node 00-runtests.js"},"engines":{"node":"node >= 0.3.0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"_npmUser":{"name":"feedic","email":"me@feedic.com"},"_id":"htmlparser2@2.1.1","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.6","_defaultsLoaded":true,"dist":{"shasum":"384616d9715e71c07efca0d7ecb931fce9c7a085","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-2.1.1.tgz"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"2.1.2":{"name":"htmlparser2","description":"Forgiving HTML/XML/RSS Parser for Node. This version is optimised and cleaned and provides a SAX interface.","version":"2.1.2","author":{"name":"Felix Boehm","email":"me@feedic.com"},"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"email":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"./lib/"},"main":"./lib/","scripts":{"test":"cd tests && node 00-runtests.js"},"engines":{"node":"node >= 0.3.0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"_npmUser":{"name":"feedic","email":"me@feedic.com"},"_id":"htmlparser2@2.1.2","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.6","_defaultsLoaded":true,"dist":{"shasum":"3280603024cd8c54d44e890f125744b769aeace5","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-2.1.2.tgz"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"2.1.3":{"name":"htmlparser2","description":"Forgiving HTML/XML/RSS Parser for Node. This version is optimised and cleaned and provides a SAX interface.","version":"2.1.3","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"email":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"./lib/"},"main":"./lib/","scripts":{"test":"node --harmony_proxies tests/00-runtests.js"},"engines":{"node":"node >= 0.3.0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"_npmUser":{"name":"feedic","email":"me@feedic.com"},"_id":"htmlparser2@2.1.3","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.6","_defaultsLoaded":true,"dist":{"shasum":"fa4f9792b86775714d9f013d92a771b16239918c","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-2.1.3.tgz"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"2.2.0":{"name":"htmlparser2","description":"Performance-optimized forgiving HTML/XML/RSS parser","version":"2.2.0","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"email":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"./lib/"},"main":"./lib/","scripts":{"test":"node tests/00-runtests.js"},"engines":{"node":"node >= 0.3.0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"_npmUser":{"name":"feedic","email":"me@feedic.com"},"_id":"htmlparser2@2.2.0","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.7","_defaultsLoaded":true,"dist":{"shasum":"c9093dd364c6c559a80416d78ffe7cb2c906494c","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-2.2.0.tgz"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"2.2.2":{"name":"htmlparser2","description":"Performance-optimized forgiving HTML/XML/RSS parser","version":"2.2.2","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"email":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"./lib/"},"main":"./lib/","scripts":{"test":"node tests/00-runtests.js"},"engines":{"node":"node >= 0.3.0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"_npmUser":{"name":"feedic","email":"me@feedic.com"},"_id":"htmlparser2@2.2.2","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.7","_defaultsLoaded":true,"dist":{"shasum":"30095e23965b3e9b396b05d14b83424ad422efe0","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-2.2.2.tgz"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"2.2.3":{"name":"htmlparser2","description":"Performance-optimized forgiving HTML/XML/RSS parser","version":"2.2.3","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"email":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"./lib/"},"main":"./lib/","scripts":{"test":"node tests/00-runtests.js"},"engines":{"node":"node >= 0.3.0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"_npmUser":{"name":"feedic","email":"me@feedic.com"},"_id":"htmlparser2@2.2.3","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.9","_defaultsLoaded":true,"dist":{"shasum":"37e75dc3d88b624081cef6fa4390b80204fc2b24","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-2.2.3.tgz"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"2.2.4":{"name":"htmlparser2","description":"Performance-optimized forgiving HTML/XML/RSS parser","version":"2.2.4","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"email":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"./lib/"},"main":"./lib/","scripts":{"test":"node tests/00-runtests.js"},"engines":{"node":"node >= 0.3.0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"_npmUser":{"name":"feedic","email":"me@feedic.com"},"_id":"htmlparser2@2.2.4","dependencies":{},"devDependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.3","_nodeVersion":"v0.6.10","_defaultsLoaded":true,"dist":{"shasum":"36fba00a3a91bd640d47688aa50867633c0fda36","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-2.2.4.tgz"},"readme":"#htmlparser2 [![Build Status](https://secure.travis-ci.org/FB55/node-htmlparser.png)](http://travis-ci.org/FB55/node-htmlparser)\n\nA forgiving HTML/XML/RSS parser written in JS for NodeJS. The parser can handle streams (chunked data) and supports custom handlers for writing custom DOMs/output.\n\n##Installing\n\tnpm install htmlparser2\n\n##Usage\n\n```javascript\nvar htmlparser = require(\"htmlparser2\");\nvar parser = new htmlparser.Parser({\n\tonopentag: function(name, attribs){\n\t\tif(name === \"script\" && attribs[\"language\"] === \"javascript\"){\n\t\t\tconsole.log(\"JS! Hooray!\");\n\t\t}\n\t},\n\tontext: function(text){\n\t\tconsole.log(\"-->\", text);\n\t},\n\tonclosetag: function(tagname){\n\t\tif(tagname === \"script\"){\n\t\t\tconsole.log(\"That's it?!\");\n\t\t}\n\t}\n});\nparser.write(\"Xyz <script language= javascript>var foo = '<<bar>>';< /  script>\");\nparser.done();\n```\n\nOutput (simplified):\n\n```javascript\n--> Xyz \nJS! Hooray!\n--> var foo = '<<bar>>';\nThat's it?!\n```\n\nRead more about the parser in the [wiki](https://github.com/FB55/node-htmlparser/wiki/Parser-options).\n\n##Get a DOM\nThe `DomHandler` (known as `DefaultHandler` in the original `htmlparser` module) produces a DOM (document object model) that may be manipulated using the `DomUtils` helper.\n\nRead more about the DomHandler in the [wiki](https://github.com/FB55/node-htmlparser/wiki/DomHandler).\n\n##Parsing RSS/RDF/Atom Feeds\n\n```javascript\nnew htmlparser.FeedHandler(function(<error> error, <object> feed){\n    ...\n});\n```\n\n##Performance\nUsing a slightly modified version of [node-expat](https://github.com/astro/node-expat)s `bench.js`, I received the following results (on a MacBook (late 2010):\n\n* [htmlparser](https://github.com/tautologistics/node-htmlparser): 51779 el/s\n* [sax.js](https://github.com/isaacs/sax-js): 53169 el/s\n* [node-expat](https://github.com/astro/node-expat): 103388 el/s\n* [htmlparser2](https://github.com/fb55/node-htmlparser): 118614 el/s\n\nThe test may be found in `tests/bench.js`.\n\n##How is this different from [node-htmlparser](https://github.com/tautologistics/node-htmlparser)?\nThis is a fork of the project above. The main difference is that this is just intended to be used with node (it runs on other platforms using [browserify](https://github.com/substack/node-browserify)). Besides, the code is much better structured, has less duplications and is remarkably faster than the original. \n\nThe parser now provides a callback interface close to [sax.js](https://github.com/isaacs/sax-js) (originally intended for [readabilitySAX](https://github.com/fb55/readabilitysax)). I also fixed a couple of bugs & included some pull requests for the original project (eg. [RDF feed support](https://github.com/tautologistics/node-htmlparser/pull/35)).\n\nThe support for location data and verbose output was removed a couple of versions ago. It's still available in the [verbose branch](https://github.com/FB55/node-htmlparser/tree/verbose). \n\nThe `DefaultHandler` and the `RssHandler` were renamed to clarify their purpose (to `DomHandler` and `FeedHandler`). The old names are still available when requiring `htmlparser2`, so your code should work as expected.","maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"2.2.5":{"name":"htmlparser2","description":"Performance-optimized forgiving HTML/XML/RSS parser","version":"2.2.5","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"email":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"./lib/"},"main":"./lib/","scripts":{"test":"node tests/00-runtests.js"},"engines":{"node":"node >= 0.3.0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"_npmUser":{"name":"feedic","email":"me@feedic.com"},"_id":"htmlparser2@2.2.5","dependencies":{},"devDependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.9","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"0a45af5d9371ebe76bbeef97e9ceb304a2a251d8","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-2.2.5.tgz"},"readme":"#htmlparser2 [![Build Status](https://secure.travis-ci.org/FB55/node-htmlparser.png)](http://travis-ci.org/FB55/node-htmlparser)\n\nA forgiving HTML/XML/RSS parser written in JS for NodeJS. The parser can handle streams (chunked data) and supports custom handlers for writing custom DOMs/output.\n\n##Installing\n\tnpm install htmlparser2\n\n##Usage\n\n```javascript\nvar htmlparser = require(\"htmlparser2\");\nvar parser = new htmlparser.Parser({\n\tonopentag: function(name, attribs){\n\t\tif(name === \"script\" && attribs[\"language\"] === \"javascript\"){\n\t\t\tconsole.log(\"JS! Hooray!\");\n\t\t}\n\t},\n\tontext: function(text){\n\t\tconsole.log(\"-->\", text);\n\t},\n\tonclosetag: function(tagname){\n\t\tif(tagname === \"script\"){\n\t\t\tconsole.log(\"That's it?!\");\n\t\t}\n\t}\n});\nparser.write(\"Xyz <script language= javascript>var foo = '<<bar>>';< /  script>\");\nparser.done();\n```\n\nOutput (simplified):\n\n```javascript\n--> Xyz \nJS! Hooray!\n--> var foo = '<<bar>>';\nThat's it?!\n```\n\nRead more about the parser in the [wiki](https://github.com/FB55/node-htmlparser/wiki/Parser-options).\n\n##Get a DOM\nThe `DomHandler` (known as `DefaultHandler` in the original `htmlparser` module) produces a DOM (document object model) that may be manipulated using the `DomUtils` helper.\n\nRead more about the DomHandler in the [wiki](https://github.com/FB55/node-htmlparser/wiki/DomHandler).\n\n##Parsing RSS/RDF/Atom Feeds\n\n```javascript\nnew htmlparser.FeedHandler(function(<error> error, <object> feed){\n    ...\n});\n```\n\n##Performance\nUsing a slightly modified version of [node-expat](https://github.com/astro/node-expat)s `bench.js`, I received the following results (on a MacBook (late 2010):\n\n* [htmlparser](https://github.com/tautologistics/node-htmlparser): 51779 el/s\n* [sax.js](https://github.com/isaacs/sax-js): 53169 el/s\n* [node-expat](https://github.com/astro/node-expat): 103388 el/s\n* [htmlparser2](https://github.com/fb55/node-htmlparser): 118614 el/s\n\nThe test may be found in `tests/bench.js`.\n\n##How is this different from [node-htmlparser](https://github.com/tautologistics/node-htmlparser)?\nThis is a fork of the project above. The main difference is that this is just intended to be used with node (it runs on other platforms using [browserify](https://github.com/substack/node-browserify)). Besides, the code is much better structured, has less duplications and is remarkably faster than the original. \n\nThe parser now provides a callback interface close to [sax.js](https://github.com/isaacs/sax-js) (originally intended for [readabilitySAX](https://github.com/fb55/readabilitysax)). I also fixed a couple of bugs & included some pull requests for the original project (eg. [RDF feed support](https://github.com/tautologistics/node-htmlparser/pull/35)).\n\nThe support for location data and verbose output was removed a couple of versions ago. It's still available in the [verbose branch](https://github.com/FB55/node-htmlparser/tree/verbose). \n\nThe `DefaultHandler` and the `RssHandler` were renamed to clarify their purpose (to `DomHandler` and `FeedHandler`). The old names are still available when requiring `htmlparser2`, so your code should work as expected.","maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"2.2.6":{"name":"htmlparser2","description":"Performance-optimized forgiving HTML/XML/RSS parser","version":"2.2.6","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"email":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"./lib/"},"main":"./lib/","scripts":{"test":"node tests/00-runtests.js"},"engines":{"node":"node >= 0.3.0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"_npmUser":{"name":"feedic","email":"me@feedic.com"},"_id":"htmlparser2@2.2.6","dependencies":{},"devDependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.9","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"76903b0bb2700de9ab28ddc2f664c72788c71771","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-2.2.6.tgz"},"readme":"#htmlparser2 [![Build Status](https://secure.travis-ci.org/FB55/node-htmlparser.png)](http://travis-ci.org/FB55/node-htmlparser)\n\nA forgiving HTML/XML/RSS parser written in JS for NodeJS. The parser can handle streams (chunked data) and supports custom handlers for writing custom DOMs/output.\n\n##Installing\n\tnpm install htmlparser2\n\n##Usage\n\n```javascript\nvar htmlparser = require(\"htmlparser2\");\nvar parser = new htmlparser.Parser({\n\tonopentag: function(name, attribs){\n\t\tif(name === \"script\" && attribs[\"language\"] === \"javascript\"){\n\t\t\tconsole.log(\"JS! Hooray!\");\n\t\t}\n\t},\n\tontext: function(text){\n\t\tconsole.log(\"-->\", text);\n\t},\n\tonclosetag: function(tagname){\n\t\tif(tagname === \"script\"){\n\t\t\tconsole.log(\"That's it?!\");\n\t\t}\n\t}\n});\nparser.write(\"Xyz <script language= javascript>var foo = '<<bar>>';< /  script>\");\nparser.done();\n```\n\nOutput (simplified):\n\n```javascript\n--> Xyz \nJS! Hooray!\n--> var foo = '<<bar>>';\nThat's it?!\n```\n\nRead more about the parser in the [wiki](https://github.com/FB55/node-htmlparser/wiki/Parser-options).\n\n##Get a DOM\nThe `DomHandler` (known as `DefaultHandler` in the original `htmlparser` module) produces a DOM (document object model) that can be manipulated using the `DomUtils` helper.\n\nRead more about the DomHandler in the [wiki](https://github.com/FB55/node-htmlparser/wiki/DomHandler).\n\n##Parsing RSS/RDF/Atom Feeds\n\n```javascript\nnew htmlparser.FeedHandler(function(<error> error, <object> feed){\n    ...\n});\n```\n\n##Performance\nUsing a slightly modified version of [node-expat](https://github.com/astro/node-expat)s `bench.js`, I received the following results (on a MacBook (late 2010)):\n\n* [htmlparser](https://github.com/tautologistics/node-htmlparser): 51779 el/s\n* [sax.js](https://github.com/isaacs/sax-js): 53169 el/s\n* [node-expat](https://github.com/astro/node-expat): 103388 el/s\n* [htmlparser2](https://github.com/fb55/node-htmlparser): 118614 el/s\n\nThe test may be found in `tests/bench.js`.\n\n##How is this different from [node-htmlparser](https://github.com/tautologistics/node-htmlparser)?\nThis is a fork of the project above. The main difference is that this is intended to be used only with node (it runs on other platforms using [browserify](https://github.com/substack/node-browserify)). Besides, the code is much better structured, has less duplications and is remarkably faster than the original. \n\nThe parser now provides a callback interface close to [sax.js](https://github.com/isaacs/sax-js) (originally targeted at [readabilitySAX](https://github.com/fb55/readabilitysax)). I also fixed a couple of bugs & included some pull requests for the original project (eg. [RDF feed support](https://github.com/tautologistics/node-htmlparser/pull/35)).\n\nThe support for location data and verbose output was removed a couple of versions ago. It's still available in the [verbose branch](https://github.com/FB55/node-htmlparser/tree/verbose). \n\nThe `DefaultHandler` and the `RssHandler` were renamed to clarify their purpose (to `DomHandler` and `FeedHandler`). The old names are still available when requiring `htmlparser2`, so your code should work as expected.","maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"2.2.7":{"name":"htmlparser2","description":"Performance-optimized forgiving HTML/XML/RSS parser","version":"2.2.7","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"email":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"./lib/"},"main":"./lib/","scripts":{"test":"node tests/00-runtests.js"},"engines":{"node":"node >= 0.3.0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"_npmUser":{"name":"feedic","email":"me@feedic.com"},"_id":"htmlparser2@2.2.7","dependencies":{},"devDependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.18","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"e649201cb763e750eddfd995c210760dd9e11bbb","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-2.2.7.tgz"},"readme":"#htmlparser2 [![Build Status](https://secure.travis-ci.org/FB55/node-htmlparser.png)](http://travis-ci.org/FB55/node-htmlparser)\n\nA forgiving HTML/XML/RSS parser written in JS for NodeJS. The parser can handle streams (chunked data) and supports custom handlers for writing custom DOMs/output.\n\n##Installing\n\tnpm install htmlparser2\n\n##Usage\n\n```javascript\nvar htmlparser = require(\"htmlparser2\");\nvar parser = new htmlparser.Parser({\n\tonopentag: function(name, attribs){\n\t\tif(name === \"script\" && attribs[\"language\"] === \"javascript\"){\n\t\t\tconsole.log(\"JS! Hooray!\");\n\t\t}\n\t},\n\tontext: function(text){\n\t\tconsole.log(\"-->\", text);\n\t},\n\tonclosetag: function(tagname){\n\t\tif(tagname === \"script\"){\n\t\t\tconsole.log(\"That's it?!\");\n\t\t}\n\t}\n});\nparser.write(\"Xyz <script language= javascript>var foo = '<<bar>>';< /  script>\");\nparser.done();\n```\n\nOutput (simplified):\n\n```javascript\n--> Xyz \nJS! Hooray!\n--> var foo = '<<bar>>';\nThat's it?!\n```\n\nRead more about the parser in the [wiki](https://github.com/FB55/node-htmlparser/wiki/Parser-options).\n\n##Get a DOM\nThe `DomHandler` (known as `DefaultHandler` in the original `htmlparser` module) produces a DOM (document object model) that can be manipulated using the `DomUtils` helper.\n\nRead more about the DomHandler in the [wiki](https://github.com/FB55/node-htmlparser/wiki/DomHandler).\n\n##Parsing RSS/RDF/Atom Feeds\n\n```javascript\nnew htmlparser.FeedHandler(function(<error> error, <object> feed){\n    ...\n});\n```\n\n##Performance\nUsing a slightly modified version of [node-expat](https://github.com/astro/node-expat)s `bench.js`, I received the following results (on a MacBook (late 2010)):\n\n* [htmlparser](https://github.com/tautologistics/node-htmlparser): 51779 el/s\n* [sax.js](https://github.com/isaacs/sax-js): 53169 el/s\n* [node-expat](https://github.com/astro/node-expat): 103388 el/s\n* [htmlparser2](https://github.com/fb55/node-htmlparser): 118614 el/s\n\nThe test may be found in `tests/bench.js`.\n\n##How is this different from [node-htmlparser](https://github.com/tautologistics/node-htmlparser)?\nThis is a fork of the project above. The main difference is that this is intended to be used only with node (it runs on other platforms using [browserify](https://github.com/substack/node-browserify)). Besides, the code is much better structured, has less duplications and is remarkably faster than the original. \n\nThe parser now provides a callback interface close to [sax.js](https://github.com/isaacs/sax-js) (originally targeted at [readabilitySAX](https://github.com/fb55/readabilitysax)). I also fixed a couple of bugs & included some pull requests for the original project (eg. [RDF feed support](https://github.com/tautologistics/node-htmlparser/pull/35)).\n\nThe support for location data and verbose output was removed a couple of versions ago. It's still available in the [verbose branch](https://github.com/FB55/node-htmlparser/tree/verbose). \n\nThe `DefaultHandler` and the `RssHandler` were renamed to clarify their purpose (to `DomHandler` and `FeedHandler`). The old names are still available when requiring `htmlparser2`, so your code should work as expected.","maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"2.2.8":{"name":"htmlparser2","description":"Performance-optimized forgiving HTML/XML/RSS parser","version":"2.2.8","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"email":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"./lib/"},"main":"./lib/","scripts":{"test":"node tests/00-runtests.js"},"engines":{"node":"node >= 0.3.0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"_npmUser":{"name":"feedic","email":"me@feedic.com"},"_id":"htmlparser2@2.2.8","dependencies":{},"devDependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.18","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"a90ce269e913801cf82db84b70ce06c3f94820d5","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-2.2.8.tgz"},"readme":"#htmlparser2 [![Build Status](https://secure.travis-ci.org/FB55/node-htmlparser.png)](http://travis-ci.org/FB55/node-htmlparser)\n\nA forgiving HTML/XML/RSS parser written in JS for NodeJS. The parser can handle streams (chunked data) and supports custom handlers for writing custom DOMs/output.\n\n##Installing\n\tnpm install htmlparser2\n\n##Usage\n\n```javascript\nvar htmlparser = require(\"htmlparser2\");\nvar parser = new htmlparser.Parser({\n\tonopentag: function(name, attribs){\n\t\tif(name === \"script\" && attribs[\"language\"] === \"javascript\"){\n\t\t\tconsole.log(\"JS! Hooray!\");\n\t\t}\n\t},\n\tontext: function(text){\n\t\tconsole.log(\"-->\", text);\n\t},\n\tonclosetag: function(tagname){\n\t\tif(tagname === \"script\"){\n\t\t\tconsole.log(\"That's it?!\");\n\t\t}\n\t}\n});\nparser.write(\"Xyz <script language= javascript>var foo = '<<bar>>';< /  script>\");\nparser.done();\n```\n\nOutput (simplified):\n\n```javascript\n--> Xyz \nJS! Hooray!\n--> var foo = '<<bar>>';\nThat's it?!\n```\n\nRead more about the parser in the [wiki](https://github.com/FB55/node-htmlparser/wiki/Parser-options).\n\n##Get a DOM\nThe `DomHandler` (known as `DefaultHandler` in the original `htmlparser` module) produces a DOM (document object model) that can be manipulated using the `DomUtils` helper.\n\nRead more about the DomHandler in the [wiki](https://github.com/FB55/node-htmlparser/wiki/DomHandler).\n\n##Parsing RSS/RDF/Atom Feeds\n\n```javascript\nnew htmlparser.FeedHandler(function(<error> error, <object> feed){\n    ...\n});\n```\n\n##Performance\nUsing a slightly modified version of [node-expat](https://github.com/astro/node-expat)s `bench.js`, I received the following results (on a MacBook (late 2010)):\n\n* [htmlparser](https://github.com/tautologistics/node-htmlparser): 51779 el/s\n* [sax.js](https://github.com/isaacs/sax-js): 53169 el/s\n* [node-expat](https://github.com/astro/node-expat): 103388 el/s\n* [htmlparser2](https://github.com/fb55/node-htmlparser): 118614 el/s\n\nThe test may be found in `tests/bench.js`.\n\n##How is this different from [node-htmlparser](https://github.com/tautologistics/node-htmlparser)?\nThis is a fork of the project above. The main difference is that this is intended to be used only with node (it runs on other platforms using [browserify](https://github.com/substack/node-browserify)). Besides, the code is much better structured, has less duplications and is remarkably faster than the original. \n\nThe parser now provides a callback interface close to [sax.js](https://github.com/isaacs/sax-js) (originally targeted at [readabilitySAX](https://github.com/fb55/readabilitysax)). I also fixed a couple of bugs & included some pull requests for the original project (eg. [RDF feed support](https://github.com/tautologistics/node-htmlparser/pull/35)).\n\nThe support for location data and verbose output was removed a couple of versions ago. It's still available in the [verbose branch](https://github.com/FB55/node-htmlparser/tree/verbose). \n\nThe `DefaultHandler` and the `RssHandler` were renamed to clarify their purpose (to `DomHandler` and `FeedHandler`). The old names are still available when requiring `htmlparser2`, so your code should work as expected.","maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"2.2.9":{"name":"htmlparser2","description":"Performance-optimized forgiving HTML/XML/RSS parser","version":"2.2.9","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"email":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"./lib/"},"main":"./lib/","scripts":{"test":"node tests/00-runtests.js"},"engines":{"node":"node >= 0.3.0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"_npmUser":{"name":"feedic","email":"me@feedic.com"},"_id":"htmlparser2@2.2.9","dependencies":{},"devDependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.18","_nodeVersion":"v0.6.18","_defaultsLoaded":true,"dist":{"shasum":"accc661bc4a648ede7c30d0597dd88ce9f4482de","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-2.2.9.tgz"},"readme":"#htmlparser2 [![Build Status](https://secure.travis-ci.org/FB55/node-htmlparser.png)](http://travis-ci.org/FB55/node-htmlparser)\n\nA forgiving HTML/XML/RSS parser written in JS for NodeJS. The parser can handle streams (chunked data) and supports custom handlers for writing custom DOMs/output.\n\n##Installing\n\tnpm install htmlparser2\n\n##Usage\n\n```javascript\nvar htmlparser = require(\"htmlparser2\");\nvar parser = new htmlparser.Parser({\n\tonopentag: function(name, attribs){\n\t\tif(name === \"script\" && attribs[\"language\"] === \"javascript\"){\n\t\t\tconsole.log(\"JS! Hooray!\");\n\t\t}\n\t},\n\tontext: function(text){\n\t\tconsole.log(\"-->\", text);\n\t},\n\tonclosetag: function(tagname){\n\t\tif(tagname === \"script\"){\n\t\t\tconsole.log(\"That's it?!\");\n\t\t}\n\t}\n});\nparser.write(\"Xyz <script language= javascript>var foo = '<<bar>>';< /  script>\");\nparser.done();\n```\n\nOutput (simplified):\n\n```javascript\n--> Xyz \nJS! Hooray!\n--> var foo = '<<bar>>';\nThat's it?!\n```\n\nRead more about the parser in the [wiki](https://github.com/FB55/node-htmlparser/wiki/Parser-options).\n\n##Get a DOM\nThe `DomHandler` (known as `DefaultHandler` in the original `htmlparser` module) produces a DOM (document object model) that can be manipulated using the `DomUtils` helper.\n\nRead more about the DomHandler in the [wiki](https://github.com/FB55/node-htmlparser/wiki/DomHandler).\n\n##Parsing RSS/RDF/Atom Feeds\n\n```javascript\nnew htmlparser.FeedHandler(function(<error> error, <object> feed){\n    ...\n});\n```\n\n##Performance\nUsing a slightly modified version of [node-expat](https://github.com/astro/node-expat)s `bench.js`, I received the following results (on a MacBook (late 2010)):\n\n* [htmlparser](https://github.com/tautologistics/node-htmlparser): 51779 el/s\n* [sax.js](https://github.com/isaacs/sax-js): 53169 el/s\n* [node-expat](https://github.com/astro/node-expat): 103388 el/s\n* [htmlparser2](https://github.com/fb55/node-htmlparser): 118614 el/s\n\nThe test may be found in `tests/bench.js`.\n\n##How is this different from [node-htmlparser](https://github.com/tautologistics/node-htmlparser)?\nThis is a fork of the project above. The main difference is that this is intended to be used only with node (it runs on other platforms using [browserify](https://github.com/substack/node-browserify)). Besides, the code is much better structured, has less duplications and is remarkably faster than the original. \n\nThe parser now provides a callback interface close to [sax.js](https://github.com/isaacs/sax-js) (originally targeted at [readabilitySAX](https://github.com/fb55/readabilitysax)). I also fixed a couple of bugs & included some pull requests for the original project (eg. [RDF feed support](https://github.com/tautologistics/node-htmlparser/pull/35)).\n\nThe support for location data and verbose output was removed a couple of versions ago. It's still available in the [verbose branch](https://github.com/FB55/node-htmlparser/tree/verbose). \n\nThe `DefaultHandler` and the `RssHandler` were renamed to clarify their purpose (to `DomHandler` and `FeedHandler`). The old names are still available when requiring `htmlparser2`, so your code should work as expected.","maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"2.3.0":{"name":"htmlparser2","description":"Performance-optimized forgiving HTML/XML/RSS parser","version":"2.3.0","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"mail":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"./lib/"},"main":"./lib/","scripts":{"test":"node tests/00-runtests.js"},"engines":"node >= 0.3.0","licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"readme":"#htmlparser2 [![Build Status](https://secure.travis-ci.org/FB55/node-htmlparser.png)](http://travis-ci.org/FB55/node-htmlparser)\n\nA forgiving HTML/XML/RSS parser written in JS for NodeJS. The parser can handle streams (chunked data) and supports custom handlers for writing custom DOMs/output.\n\n##Installing\n\tnpm install htmlparser2\n\n##Usage\n\n```javascript\nvar htmlparser = require(\"htmlparser2\");\nvar parser = new htmlparser.Parser({\n\tonopentag: function(name, attribs){\n\t\tif(name === \"script\" && attribs[\"language\"] === \"javascript\"){\n\t\t\tconsole.log(\"JS! Hooray!\");\n\t\t}\n\t},\n\tontext: function(text){\n\t\tconsole.log(\"-->\", text);\n\t},\n\tonclosetag: function(tagname){\n\t\tif(tagname === \"script\"){\n\t\t\tconsole.log(\"That's it?!\");\n\t\t}\n\t}\n});\nparser.write(\"Xyz <script language= javascript>var foo = '<<bar>>';< /  script>\");\nparser.done();\n```\n\nOutput (simplified):\n\n```javascript\n--> Xyz \nJS! Hooray!\n--> var foo = '<<bar>>';\nThat's it?!\n```\n\nRead more about the parser in the [wiki](https://github.com/FB55/node-htmlparser/wiki/Parser-options).\n\n##Get a DOM\nThe `DomHandler` (known as `DefaultHandler` in the original `htmlparser` module) produces a DOM (document object model) that can be manipulated using the `DomUtils` helper.\n\nRead more about the DomHandler in the [wiki](https://github.com/FB55/node-htmlparser/wiki/DomHandler).\n\n##Parsing RSS/RDF/Atom Feeds\n\n```javascript\nnew htmlparser.FeedHandler(function(<error> error, <object> feed){\n    ...\n});\n```\n\n##Performance\nUsing a slightly modified version of [node-expat](https://github.com/astro/node-expat)s `bench.js`, I received the following results (on a MacBook (late 2010)):\n\n* [htmlparser](https://github.com/tautologistics/node-htmlparser): 51779 el/s\n* [sax.js](https://github.com/isaacs/sax-js): 53169 el/s\n* [node-expat](https://github.com/astro/node-expat): 103388 el/s\n* [htmlparser2](https://github.com/fb55/node-htmlparser): 118614 el/s\n\nThe test may be found in `tests/bench.js`.\n\n##How is this different from [node-htmlparser](https://github.com/tautologistics/node-htmlparser)?\nThis is a fork of the project above. The main difference is that this is intended to be used only with node (it runs on other platforms using [browserify](https://github.com/substack/node-browserify)). Besides, the code is much better structured, has less duplications and is remarkably faster than the original. \n\nThe parser now provides a callback interface close to [sax.js](https://github.com/isaacs/sax-js) (originally targeted at [readabilitySAX](https://github.com/fb55/readabilitysax)). I also fixed a couple of bugs & included some pull requests for the original project (eg. [RDF feed support](https://github.com/tautologistics/node-htmlparser/pull/35)).\n\nThe support for location data and verbose output was removed a couple of versions ago. It's still available in the [verbose branch](https://github.com/FB55/node-htmlparser/tree/verbose). \n\nThe `DefaultHandler` and the `RssHandler` were renamed to clarify their purpose (to `DomHandler` and `FeedHandler`). The old names are still available when requiring `htmlparser2`, so your code should work as expected.","_id":"htmlparser2@2.3.0","dist":{"shasum":"4b3523cb1832cf31bf25580701b80224cad9b6a5","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-2.3.0.tgz"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"2.5.0":{"name":"htmlparser2","description":"Performance-optimized forgiving HTML/XML/RSS parser","version":"2.5.0","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"mail":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"lib/"},"main":"./lib/","scripts":{"test":"node tests/00-runtests.js"},"dependencies":{"domhandler":"2.0","domutils":"1.0","domelementtype":"1.0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"readme":"#htmlparser2 [![Build Status](https://secure.travis-ci.org/fb55/node-htmlparser.png)](http://travis-ci.org/fb55/node-htmlparser)\n\nA forgiving HTML/XML/RSS parser written in JS for NodeJS. The parser can handle streams (chunked data) and supports custom handlers for writing custom DOMs/output.\n\n##Installing\n\tnpm install htmlparser2\n\n##Usage\n\n```javascript\nvar htmlparser = require(\"htmlparser2\");\nvar parser = new htmlparser.Parser({\n\tonopentag: function(name, attribs){\n\t\tif(name === \"script\" && attribs[\"language\"] === \"javascript\"){\n\t\t\tconsole.log(\"JS! Hooray!\");\n\t\t}\n\t},\n\tontext: function(text){\n\t\tconsole.log(\"-->\", text);\n\t},\n\tonclosetag: function(tagname){\n\t\tif(tagname === \"script\"){\n\t\t\tconsole.log(\"That's it?!\");\n\t\t}\n\t}\n});\nparser.write(\"Xyz <script language= javascript>var foo = '<<bar>>';< /  script>\");\nparser.done();\n```\n\nOutput (simplified):\n\n```javascript\n--> Xyz \nJS! Hooray!\n--> var foo = '<<bar>>';\nThat's it?!\n```\n\nRead more about the parser in the [wiki](https://github.com/FB55/node-htmlparser/wiki/Parser-options).\n\n##Get a DOM\nThe `DomHandler` (known as `DefaultHandler` in the original `htmlparser` module) produces a DOM (document object model) that can be manipulated using the `DomUtils` helper.\n\nThe `DomHandler`, while still bundled with this module, was recently moved to it's [own module](https://github.com/FB55/domhandler). Have a look at it for further information.\n\n##Parsing RSS/RDF/Atom Feeds\n\n```javascript\nnew htmlparser.FeedHandler(function(<error> error, <object> feed){\n    ...\n});\n```\n\n##Performance\nUsing a slightly modified version of [node-expat](https://github.com/astro/node-expat)s `bench.js`, I received the following results (on a MacBook (late 2010)):\n\n* [htmlparser](https://github.com/tautologistics/node-htmlparser): 51779 el/s\n* [sax.js](https://github.com/isaacs/sax-js): 53169 el/s\n* [node-expat](https://github.com/astro/node-expat): 103388 el/s\n* [htmlparser2](https://github.com/fb55/node-htmlparser): 118614 el/s\n\nThe test may be found in `tests/bench.js`.\n\n##How is this different from [node-htmlparser](https://github.com/tautologistics/node-htmlparser)?\nThis is a fork of the project above. The main difference is that this is intended to be used only with node (it runs on other platforms using [browserify](https://github.com/substack/node-browserify)). Besides, the code is much better structured, has less duplications and is remarkably faster than the original. \n\nThe parser now provides a callback interface close to [sax.js](https://github.com/isaacs/sax-js) (originally targeted at [readabilitySAX](https://github.com/fb55/readabilitysax)). I also fixed a couple of bugs & included some pull requests for the original project (eg. [RDF feed support](https://github.com/tautologistics/node-htmlparser/pull/35)).\n\nThe support for location data and verbose output was removed a couple of versions ago. It's still available in the [verbose branch](https://github.com/FB55/node-htmlparser/tree/verbose). \n\nThe `DefaultHandler` and the `RssHandler` were renamed to clarify their purpose (to `DomHandler` and `FeedHandler`). The old names are still available when requiring `htmlparser2`, so your code should work as expected.","readmeFilename":"README.md","_id":"htmlparser2@2.5.0","dist":{"shasum":"d129b5f5a8e3eed11f07e9c5b2f902cff5a7aca9","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-2.5.0.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"feedic","email":"me@feedic.com"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"2.5.1":{"name":"htmlparser2","description":"Performance-optimized forgiving HTML/XML/RSS parser","version":"2.5.1","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"mail":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"lib/"},"main":"./lib/","scripts":{"test":"node tests/00-runtests.js"},"dependencies":{"domhandler":"2.0","domutils":"1.0","domelementtype":"1"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"readme":"#htmlparser2 [![Build Status](https://secure.travis-ci.org/fb55/node-htmlparser.png)](http://travis-ci.org/fb55/node-htmlparser)\n\nA forgiving HTML/XML/RSS parser written in JS for NodeJS. The parser can handle streams (chunked data) and supports custom handlers for writing custom DOMs/output.\n\n##Installing\n\tnpm install htmlparser2\n\n##Usage\n\n```javascript\nvar htmlparser = require(\"htmlparser2\");\nvar parser = new htmlparser.Parser({\n\tonopentag: function(name, attribs){\n\t\tif(name === \"script\" && attribs[\"language\"] === \"javascript\"){\n\t\t\tconsole.log(\"JS! Hooray!\");\n\t\t}\n\t},\n\tontext: function(text){\n\t\tconsole.log(\"-->\", text);\n\t},\n\tonclosetag: function(tagname){\n\t\tif(tagname === \"script\"){\n\t\t\tconsole.log(\"That's it?!\");\n\t\t}\n\t}\n});\nparser.write(\"Xyz <script language= javascript>var foo = '<<bar>>';< /  script>\");\nparser.done();\n```\n\nOutput (simplified):\n\n```javascript\n--> Xyz \nJS! Hooray!\n--> var foo = '<<bar>>';\nThat's it?!\n```\n\nRead more about the parser in the [wiki](https://github.com/FB55/node-htmlparser/wiki/Parser-options).\n\n##Get a DOM\nThe `DomHandler` (known as `DefaultHandler` in the original `htmlparser` module) produces a DOM (document object model) that can be manipulated using the `DomUtils` helper.\n\nThe `DomHandler`, while still bundled with this module, was recently moved to it's [own module](https://github.com/FB55/domhandler). Have a look at it for further information.\n\n##Parsing RSS/RDF/Atom Feeds\n\n```javascript\nnew htmlparser.FeedHandler(function(<error> error, <object> feed){\n    ...\n});\n```\n\n##Performance\nUsing a slightly modified version of [node-expat](https://github.com/astro/node-expat)s `bench.js`, I received the following results (on a MacBook (late 2010)):\n\n* [htmlparser](https://github.com/tautologistics/node-htmlparser): 51779 el/s\n* [sax.js](https://github.com/isaacs/sax-js): 53169 el/s\n* [node-expat](https://github.com/astro/node-expat): 103388 el/s\n* [htmlparser2](https://github.com/fb55/node-htmlparser): 118614 el/s\n\nThe test may be found in `tests/bench.js`.\n\n##How is this different from [node-htmlparser](https://github.com/tautologistics/node-htmlparser)?\nThis is a fork of the project above. The main difference is that this is intended to be used only with node (it runs on other platforms using [browserify](https://github.com/substack/node-browserify)). Besides, the code is much better structured, has less duplications and is remarkably faster than the original. \n\nThe parser now provides a callback interface close to [sax.js](https://github.com/isaacs/sax-js) (originally targeted at [readabilitySAX](https://github.com/fb55/readabilitysax)). I also fixed a couple of bugs & included some pull requests for the original project (eg. [RDF feed support](https://github.com/tautologistics/node-htmlparser/pull/35)).\n\nThe support for location data and verbose output was removed a couple of versions ago. It's still available in the [verbose branch](https://github.com/FB55/node-htmlparser/tree/verbose). \n\nThe `DefaultHandler` and the `RssHandler` were renamed to clarify their purpose (to `DomHandler` and `FeedHandler`). The old names are still available when requiring `htmlparser2`, so your code should work as expected.","readmeFilename":"README.md","_id":"htmlparser2@2.5.1","dist":{"shasum":"e1881f1f9d13d4a083d39ffdbe3dcd55567a9827","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-2.5.1.tgz"},"_npmVersion":"1.1.69","_npmUser":{"name":"feedic","email":"me@feedic.com"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"2.5.2":{"name":"htmlparser2","description":"Performance-optimized forgiving HTML/XML/RSS parser","version":"2.5.2","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"mail":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"lib/"},"main":"./lib/","scripts":{"test":"node tests/00-runtests.js"},"dependencies":{"domhandler":"2.0","domutils":"1.0","domelementtype":"1"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"readme":"#htmlparser2 [![Build Status](https://secure.travis-ci.org/fb55/node-htmlparser.png)](http://travis-ci.org/fb55/node-htmlparser)\n\nA forgiving HTML/XML/RSS parser written in JS for NodeJS. The parser can handle streams (chunked data) and supports custom handlers for writing custom DOMs/output.\n\n##Installing\n\tnpm install htmlparser2\n\n##Usage\n\n```javascript\nvar htmlparser = require(\"htmlparser2\");\nvar parser = new htmlparser.Parser({\n\tonopentag: function(name, attribs){\n\t\tif(name === \"script\" && attribs[\"language\"] === \"javascript\"){\n\t\t\tconsole.log(\"JS! Hooray!\");\n\t\t}\n\t},\n\tontext: function(text){\n\t\tconsole.log(\"-->\", text);\n\t},\n\tonclosetag: function(tagname){\n\t\tif(tagname === \"script\"){\n\t\t\tconsole.log(\"That's it?!\");\n\t\t}\n\t}\n});\nparser.write(\"Xyz <script language= javascript>var foo = '<<bar>>';< /  script>\");\nparser.done();\n```\n\nOutput (simplified):\n\n```javascript\n--> Xyz \nJS! Hooray!\n--> var foo = '<<bar>>';\nThat's it?!\n```\n\nRead more about the parser in the [wiki](https://github.com/FB55/node-htmlparser/wiki/Parser-options).\n\n##Get a DOM\nThe `DomHandler` (known as `DefaultHandler` in the original `htmlparser` module) produces a DOM (document object model) that can be manipulated using the `DomUtils` helper.\n\nThe `DomHandler`, while still bundled with this module, was recently moved to it's [own module](https://github.com/FB55/domhandler). Have a look at it for further information.\n\n##Parsing RSS/RDF/Atom Feeds\n\n```javascript\nnew htmlparser.FeedHandler(function(<error> error, <object> feed){\n    ...\n});\n```\n\n##Performance\nUsing a slightly modified version of [node-expat](https://github.com/astro/node-expat)s `bench.js`, I received the following results (on a MacBook (late 2010)):\n\n* [htmlparser](https://github.com/tautologistics/node-htmlparser): 51779 el/s\n* [sax.js](https://github.com/isaacs/sax-js): 53169 el/s\n* [node-expat](https://github.com/astro/node-expat): 103388 el/s\n* [htmlparser2](https://github.com/fb55/node-htmlparser): 118614 el/s\n\nThe test may be found in `tests/bench.js`.\n\n##How is this different from [node-htmlparser](https://github.com/tautologistics/node-htmlparser)?\nThis is a fork of the project above. The main difference is that this is intended to be used only with node (it runs on other platforms using [browserify](https://github.com/substack/node-browserify)). Besides, the code is much better structured, has less duplications and is remarkably faster than the original. \n\nThe parser now provides a callback interface close to [sax.js](https://github.com/isaacs/sax-js) (originally targeted at [readabilitySAX](https://github.com/fb55/readabilitysax)). I also fixed a couple of bugs & included some pull requests for the original project (eg. [RDF feed support](https://github.com/tautologistics/node-htmlparser/pull/35)).\n\nThe support for location data and verbose output was removed a couple of versions ago. It's still available in the [verbose branch](https://github.com/FB55/node-htmlparser/tree/verbose). \n\nThe `DefaultHandler` and the `RssHandler` were renamed to clarify their purpose (to `DomHandler` and `FeedHandler`). The old names are still available when requiring `htmlparser2`, so your code should work as expected.","readmeFilename":"README.md","_id":"htmlparser2@2.5.2","dist":{"shasum":"42b51ab2c85068fc67fc5f113c9a2598ffee28d7","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-2.5.2.tgz"},"_from":".","_npmVersion":"1.2.10","_npmUser":{"name":"feedic","email":"me@feedic.com"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"2.6.0":{"name":"htmlparser2","description":"Performance-optimized forgiving HTML/XML/RSS parser","version":"2.6.0","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"mail":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"lib/"},"main":"./lib/","scripts":{"test":"node tests/00-runtests.js"},"dependencies":{"domhandler":"2.0","domutils":"1.0","domelementtype":"1"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"readme":"#htmlparser2 [![Build Status](https://secure.travis-ci.org/fb55/node-htmlparser.png)](http://travis-ci.org/fb55/node-htmlparser)\n\nA forgiving HTML/XML/RSS parser written in JS for NodeJS. The parser can handle streams (chunked data) and supports custom handlers for writing custom DOMs/output.\n\n##Installing\n\tnpm install htmlparser2\n\n##Usage\n\n```javascript\nvar htmlparser = require(\"htmlparser2\");\nvar parser = new htmlparser.Parser({\n\tonopentag: function(name, attribs){\n\t\tif(name === \"script\" && attribs.type === \"text/javascript\"){\n\t\t\tconsole.log(\"JS! Hooray!\");\n\t\t}\n\t},\n\tontext: function(text){\n\t\tconsole.log(\"-->\", text);\n\t},\n\tonclosetag: function(tagname){\n\t\tif(tagname === \"script\"){\n\t\t\tconsole.log(\"That's it?!\");\n\t\t}\n\t}\n});\nparser.write(\"Xyz <script language= javascript>var foo = '<<bar>>';< /  script>\");\nparser.done();\n```\n\nOutput (simplified):\n\n```javascript\n--> Xyz \nJS! Hooray!\n--> var foo = '<<bar>>';\nThat's it?!\n```\n\nRead more about the parser in the [wiki](https://github.com/FB55/node-htmlparser/wiki/Parser-options).\n\n##Get a DOM\nThe `DomHandler` (known as `DefaultHandler` in the original `htmlparser` module) produces a DOM (document object model) that can be manipulated using the `DomUtils` helper.\n\nThe `DomHandler`, while still bundled with this module, was recently moved to it's [own module](https://github.com/FB55/domhandler). Have a look at it for further information.\n\n##Parsing RSS/RDF/Atom Feeds\n\n```javascript\nnew htmlparser.FeedHandler(function(<error> error, <object> feed){\n    ...\n});\n```\n\n##Performance\nUsing a slightly modified version of [node-expat](https://github.com/astro/node-expat)s `bench.js`, I received the following results (on a MacBook (late 2010)):\n\n* [htmlparser](https://github.com/tautologistics/node-htmlparser): 51779 el/s\n* [sax.js](https://github.com/isaacs/sax-js): 53169 el/s\n* [node-expat](https://github.com/astro/node-expat): 103388 el/s\n* [htmlparser2](https://github.com/fb55/node-htmlparser): 118614 el/s\n\nThe test may be found in `tests/bench.js`.\n\n##How is this different from [node-htmlparser](https://github.com/tautologistics/node-htmlparser)?\nThis is a fork of the project above. The main difference is that this is intended to be used only with node (it runs on other platforms using [browserify](https://github.com/substack/node-browserify)). Besides, the code is much better structured, has less duplications and is remarkably faster than the original. \n\nThe parser now provides a callback interface close to [sax.js](https://github.com/isaacs/sax-js) (originally targeted at [readabilitySAX](https://github.com/fb55/readabilitysax)). I also fixed a couple of bugs & included some pull requests for the original project (eg. [RDF feed support](https://github.com/tautologistics/node-htmlparser/pull/35)).\n\nThe support for location data and verbose output was removed a couple of versions ago. It's still available in the [verbose branch](https://github.com/FB55/node-htmlparser/tree/verbose). \n\nThe `DefaultHandler` and the `RssHandler` were renamed to clarify their purpose (to `DomHandler` and `FeedHandler`). The old names are still available when requiring `htmlparser2`, so your code should work as expected.\n","readmeFilename":"README.md","_id":"htmlparser2@2.6.0","dist":{"shasum":"b28564ea9d1ba56a104ace6a7b0fdda2f315836f","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-2.6.0.tgz"},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"feedic","email":"me@feedic.com"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"3.0.0":{"name":"htmlparser2","description":"Performance-optimized forgiving HTML/XML/RSS parser","version":"3.0.0","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"mail":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"lib/"},"main":"lib/index.js","scripts":{"test":"node tests/00-runtests.js"},"dependencies":{"domhandler":"2.0","domutils":"1.1","domelementtype":"1","readable-stream":"1.0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"readme":"#htmlparser2 [![Build Status](https://secure.travis-ci.org/fb55/node-htmlparser.png)](http://travis-ci.org/fb55/node-htmlparser)\n\nA forgiving HTML/XML/RSS parser written in JS for NodeJS. The parser can handle streams (chunked data) and supports custom handlers for writing custom DOMs/output.\n\n##Installing\n\tnpm install htmlparser2\n\n##Usage\n\n```javascript\nvar htmlparser = require(\"htmlparser2\");\nvar parser = new htmlparser.Parser({\n\tonopentag: function(name, attribs){\n\t\tif(name === \"script\" && attribs.type === \"text/javascript\"){\n\t\t\tconsole.log(\"JS! Hooray!\");\n\t\t}\n\t},\n\tontext: function(text){\n\t\tconsole.log(\"-->\", text);\n\t},\n\tonclosetag: function(tagname){\n\t\tif(tagname === \"script\"){\n\t\t\tconsole.log(\"That's it?!\");\n\t\t}\n\t}\n});\nparser.write(\"Xyz <script language= javascript>var foo = '<<bar>>';< /  script>\");\nparser.done();\n```\n\nOutput (simplified):\n\n```javascript\n--> Xyz \nJS! Hooray!\n--> var foo = '<<bar>>';\nThat's it?!\n```\n\nRead more about the parser in the [wiki](https://github.com/FB55/node-htmlparser/wiki/Parser-options).\n\n##Get a DOM\nThe `DomHandler` (known as `DefaultHandler` in the original `htmlparser` module) produces a DOM (document object model) that can be manipulated using the `DomUtils` helper.\n\nThe `DomHandler`, while still bundled with this module, was recently moved to it's [own module](https://github.com/FB55/domhandler). Have a look at it for further information.\n\n##Parsing RSS/RDF/Atom Feeds\n\n```javascript\nnew htmlparser.FeedHandler(function(<error> error, <object> feed){\n    ...\n});\n```\n\n##Performance\nUsing a slightly modified version of [node-expat](https://github.com/astro/node-expat)s `bench.js`, I received the following results (on a MacBook (late 2010)):\n\n* [htmlparser](https://github.com/tautologistics/node-htmlparser): 51779 el/s\n* [sax.js](https://github.com/isaacs/sax-js): 53169 el/s\n* [node-expat](https://github.com/astro/node-expat): 103388 el/s\n* [htmlparser2](https://github.com/fb55/node-htmlparser): 118614 el/s\n\nThe test may be found in `tests/bench.js`.\n\n##How is this different from [node-htmlparser](https://github.com/tautologistics/node-htmlparser)?\nThis is a fork of the project above. The main difference is that this is intended to be used only with node (it runs on other platforms using [browserify](https://github.com/substack/node-browserify)). Besides, the code is much better structured, has less duplications and is remarkably faster than the original. \n\nThe parser now provides a callback interface close to [sax.js](https://github.com/isaacs/sax-js) (originally targeted at [readabilitySAX](https://github.com/fb55/readabilitysax)). I also fixed a couple of bugs & included some pull requests for the original project (eg. [RDF feed support](https://github.com/tautologistics/node-htmlparser/pull/35)).\n\nThe support for location data and verbose output was removed a couple of versions ago. It's still available in the [verbose branch](https://github.com/FB55/node-htmlparser/tree/verbose). \n\nThe `DefaultHandler` and the `RssHandler` were renamed to clarify their purpose (to `DomHandler` and `FeedHandler`). The old names are still available when requiring `htmlparser2`, so your code should work as expected.\n","readmeFilename":"README.md","_id":"htmlparser2@3.0.0","dist":{"shasum":"38ccfd31c197a8ef7eb7c66933714a8cca4ce5bf","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-3.0.0.tgz"},"_from":".","_npmVersion":"1.2.15","_npmUser":{"name":"feedic","email":"me@feedic.com"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"3.0.1":{"name":"htmlparser2","description":"Performance-optimized forgiving HTML/XML/RSS parser","version":"3.0.1","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"mail":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"lib/"},"main":"lib/index.js","scripts":{"test":"node tests/00-runtests.js"},"dependencies":{"domhandler":"2.0","domutils":"1.1","domelementtype":"1","readable-stream":"1.0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"readme":"#htmlparser2 [![Build Status](https://secure.travis-ci.org/fb55/node-htmlparser.png)](http://travis-ci.org/fb55/node-htmlparser)\n\nA forgiving HTML/XML/RSS parser written in JS for NodeJS. The parser can handle streams (chunked data) and supports custom handlers for writing custom DOMs/output.\n\n##Installing\n\tnpm install htmlparser2\n\n##Usage\n\n```javascript\nvar htmlparser = require(\"htmlparser2\");\nvar parser = new htmlparser.Parser({\n\tonopentag: function(name, attribs){\n\t\tif(name === \"script\" && attribs.type === \"text/javascript\"){\n\t\t\tconsole.log(\"JS! Hooray!\");\n\t\t}\n\t},\n\tontext: function(text){\n\t\tconsole.log(\"-->\", text);\n\t},\n\tonclosetag: function(tagname){\n\t\tif(tagname === \"script\"){\n\t\t\tconsole.log(\"That's it?!\");\n\t\t}\n\t}\n});\nparser.write(\"Xyz <script language= javascript>var foo = '<<bar>>';< /  script>\");\nparser.done();\n```\n\nOutput (simplified):\n\n```javascript\n--> Xyz \nJS! Hooray!\n--> var foo = '<<bar>>';\nThat's it?!\n```\n\nRead more about the parser in the [wiki](https://github.com/FB55/node-htmlparser/wiki/Parser-options).\n\n##Get a DOM\nThe `DomHandler` (known as `DefaultHandler` in the original `htmlparser` module) produces a DOM (document object model) that can be manipulated using the `DomUtils` helper.\n\nThe `DomHandler`, while still bundled with this module, was recently moved to it's [own module](https://github.com/FB55/domhandler). Have a look at it for further information.\n\n##Parsing RSS/RDF/Atom Feeds\n\n```javascript\nnew htmlparser.FeedHandler(function(<error> error, <object> feed){\n    ...\n});\n```\n\n##Performance\nUsing a slightly modified version of [node-expat](https://github.com/astro/node-expat)s `bench.js`, I received the following results (on a MacBook (late 2010)):\n\n* [htmlparser](https://github.com/tautologistics/node-htmlparser): 51779 el/s\n* [sax.js](https://github.com/isaacs/sax-js): 53169 el/s\n* [node-expat](https://github.com/astro/node-expat): 103388 el/s\n* [htmlparser2](https://github.com/fb55/node-htmlparser): 118614 el/s\n\nThe test may be found in `tests/bench.js`.\n\n##How is this different from [node-htmlparser](https://github.com/tautologistics/node-htmlparser)?\nThis is a fork of the project above. The main difference is that this is intended to be used only with node (it runs on other platforms using [browserify](https://github.com/substack/node-browserify)). Besides, the code is much better structured, has less duplications and is remarkably faster than the original. \n\nThe parser now provides a callback interface close to [sax.js](https://github.com/isaacs/sax-js) (originally targeted at [readabilitySAX](https://github.com/fb55/readabilitysax)). I also fixed a couple of bugs & included some pull requests for the original project (eg. [RDF feed support](https://github.com/tautologistics/node-htmlparser/pull/35)).\n\nThe support for location data and verbose output was removed a couple of versions ago. It's still available in the [verbose branch](https://github.com/FB55/node-htmlparser/tree/verbose). \n\nThe `DefaultHandler` and the `RssHandler` were renamed to clarify their purpose (to `DomHandler` and `FeedHandler`). The old names are still available when requiring `htmlparser2`, so your code should work as expected.\n","readmeFilename":"README.md","_id":"htmlparser2@3.0.1","dist":{"shasum":"ad37e8b1e1661e41398537aeb92c4c9cb0612bea","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-3.0.1.tgz"},"_from":".","_npmVersion":"1.2.15","_npmUser":{"name":"feedic","email":"me@feedic.com"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"3.0.2":{"name":"htmlparser2","description":"Performance-optimized forgiving HTML/XML/RSS parser","version":"3.0.2","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/node-htmlparser.git"},"bugs":{"mail":"me@feedic.com","url":"http://github.com/fb55/node-htmlparser/issues"},"directories":{"lib":"lib/"},"main":"lib/index.js","scripts":{"test":"node tests/00-runtests.js"},"dependencies":{"domhandler":"2.0","domutils":"1.1","domelementtype":"1","readable-stream":"1.0"},"licenses":[{"type":"MIT","url":"http://github.com/tautologistics/node-htmlparser/raw/master/LICENSE"}],"readme":"#htmlparser2 [![Build Status](https://secure.travis-ci.org/fb55/node-htmlparser.png)](http://travis-ci.org/fb55/node-htmlparser)\n\nA forgiving HTML/XML/RSS parser written in JS for NodeJS. The parser can handle streams (chunked data) and supports custom handlers for writing custom DOMs/output.\n\n##Installing\n\tnpm install htmlparser2\n\n##Usage\n\n```javascript\nvar htmlparser = require(\"htmlparser2\");\nvar parser = new htmlparser.Parser({\n\tonopentag: function(name, attribs){\n\t\tif(name === \"script\" && attribs.type === \"text/javascript\"){\n\t\t\tconsole.log(\"JS! Hooray!\");\n\t\t}\n\t},\n\tontext: function(text){\n\t\tconsole.log(\"-->\", text);\n\t},\n\tonclosetag: function(tagname){\n\t\tif(tagname === \"script\"){\n\t\t\tconsole.log(\"That's it?!\");\n\t\t}\n\t}\n});\nparser.write(\"Xyz <script language= javascript>var foo = '<<bar>>';< /  script>\");\nparser.done();\n```\n\nOutput (simplified):\n\n```javascript\n--> Xyz \nJS! Hooray!\n--> var foo = '<<bar>>';\nThat's it?!\n```\n\nRead more about the parser in the [wiki](https://github.com/FB55/node-htmlparser/wiki/Parser-options).\n\n##Get a DOM\nThe `DomHandler` (known as `DefaultHandler` in the original `htmlparser` module) produces a DOM (document object model) that can be manipulated using the `DomUtils` helper.\n\nThe `DomHandler`, while still bundled with this module, was recently moved to it's [own module](https://github.com/FB55/domhandler). Have a look at it for further information.\n\n##Parsing RSS/RDF/Atom Feeds\n\n```javascript\nnew htmlparser.FeedHandler(function(<error> error, <object> feed){\n    ...\n});\n```\n\n##Performance\nUsing a slightly modified version of [node-expat](https://github.com/astro/node-expat)s `bench.js`, I received the following results (on a MacBook (late 2010)):\n\n* [htmlparser](https://github.com/tautologistics/node-htmlparser): 51779 el/s\n* [sax.js](https://github.com/isaacs/sax-js): 53169 el/s\n* [node-expat](https://github.com/astro/node-expat): 103388 el/s\n* [htmlparser2](https://github.com/fb55/node-htmlparser): 118614 el/s\n\nThe test may be found in `tests/bench.js`.\n\n##How is this different from [node-htmlparser](https://github.com/tautologistics/node-htmlparser)?\nThis is a fork of the project above. The main difference is that this is intended to be used only with node (it runs on other platforms using [browserify](https://github.com/substack/node-browserify)). Besides, the code is much better structured, has less duplications and is remarkably faster than the original. \n\nThe parser now provides a callback interface close to [sax.js](https://github.com/isaacs/sax-js) (originally targeted at [readabilitySAX](https://github.com/fb55/readabilitysax)). I also fixed a couple of bugs & included some pull requests for the original project (eg. [RDF feed support](https://github.com/tautologistics/node-htmlparser/pull/35)).\n\nThe support for location data and verbose output was removed a couple of versions ago. It's still available in the [verbose branch](https://github.com/FB55/node-htmlparser/tree/verbose). \n\nThe `DefaultHandler` and the `RssHandler` were renamed to clarify their purpose (to `DomHandler` and `FeedHandler`). The old names are still available when requiring `htmlparser2`, so your code should work as expected.\n","readmeFilename":"README.md","_id":"htmlparser2@3.0.2","dist":{"shasum":"b61e725d651a3637f97da232002d5fed493b4ea4","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-3.0.2.tgz"},"_from":".","_npmVersion":"1.2.15","_npmUser":{"name":"feedic","email":"me@feedic.com"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"3.0.3":{"name":"htmlparser2","description":"Performance-optimized forgiving HTML/XML/RSS parser","version":"3.0.3","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/htmlparser2.git"},"bugs":{"mail":"me@feedic.com","url":"http://github.com/fb55/htmlparser2/issues"},"directories":{"lib":"lib/"},"main":"lib/index.js","scripts":{"test":"node tests/00-runtests.js"},"dependencies":{"domhandler":"2.0","domutils":"1.1","domelementtype":"1","readable-stream":"1.0"},"licenses":[{"type":"MIT","url":"http://github.com/fb55/htmlparser2/raw/master/LICENSE"}],"readme":"#htmlparser2 [![Build Status](https://secure.travis-ci.org/fb55/htmlparser2.png)](http://travis-ci.org/fb55/htmlparser2)\n\nA forgiving HTML/XML/RSS parser written in JS for NodeJS. The parser can handle streams (chunked data) and supports custom handlers for writing custom DOMs/output.\n\n##Installing\n\tnpm install htmlparser2\n\n##Usage\n\n```javascript\nvar htmlparser = require(\"htmlparser2\");\nvar parser = new htmlparser.Parser({\n\tonopentag: function(name, attribs){\n\t\tif(name === \"script\" && attribs.type === \"text/javascript\"){\n\t\t\tconsole.log(\"JS! Hooray!\");\n\t\t}\n\t},\n\tontext: function(text){\n\t\tconsole.log(\"-->\", text);\n\t},\n\tonclosetag: function(tagname){\n\t\tif(tagname === \"script\"){\n\t\t\tconsole.log(\"That's it?!\");\n\t\t}\n\t}\n});\nparser.write(\"Xyz <script type='text/javascript'>var foo = '<<bar>>';< /  script>\");\nparser.end();\n```\n\nOutput (simplified):\n\n```javascript\n--> Xyz \nJS! Hooray!\n--> var foo = '<<bar>>';\nThat's it?!\n```\n\nRead more about the parser in the [wiki](https://github.com/fb55/htmlparser2/wiki/Parser-options).\n\n##Get a DOM\nThe `DomHandler` (known as `DefaultHandler` in the original `htmlparser` module) produces a DOM (document object model) that can be manipulated using the `DomUtils` helper.\n\nThe `DomHandler`, while still bundled with this module, was recently moved to it's [own module](https://github.com/fb55/domhandler). Have a look at it for further information.\n\n##Parsing RSS/RDF/Atom Feeds\n\n```javascript\nnew htmlparser.FeedHandler(function(<error> error, <object> feed){\n    ...\n});\n```\n\n##Performance\nUsing a modified version of [node-expat](https://github.com/astro/node-expat)'s `bench.js`, I received the following results (on OSX):\n\n```\nnode-xml:     28.03 ms/el\nlibxmljs:     11.11 ms/el\nsax:          26.92 ms/el\nnode-expat:   07.32 ms/el\nhtmlparser:   16.40 ms/el\nhtmlparser2:  06.32 ms/el\n\nWinner: htmlparser2\n```\n\nThe test can be found in [`tests/bench.js`](tests/bench.js).\n\n##How is this different from [node-htmlparser](https://github.com/tautologistics/node-htmlparser)?\nThis is a fork of the `htmlparser` module. The main difference is that this is intended to be used only with node (it runs on other platforms using [browserify](https://github.com/substack/node-browserify)). `htmlparser2` was rewritten multiple times and, while it maintains an API that's compatible with `htmlparser` in most cases, the projects don't share any code anymore.\n\nThe parser now provides a callback interface close to [sax.js](https://github.com/isaacs/sax-js) (originally targeted at [readabilitySAX](https://github.com/fb55/readabilitysax)). As a result, old handlers won't work anymore.\n\nThe `DefaultHandler` and the `RssHandler` were renamed to clarify their purpose (to `DomHandler` and `FeedHandler`). The old names are still available when requiring `htmlparser2`, so your code should work as expected.\n","readmeFilename":"README.md","_id":"htmlparser2@3.0.3","dist":{"shasum":"016fe01d4e27af89439fa6157f842b84131d9af3","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-3.0.3.tgz"},"_from":".","_npmVersion":"1.2.17","_npmUser":{"name":"feedic","email":"me@feedic.com"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"3.0.4":{"name":"htmlparser2","description":"Performance-optimized forgiving HTML/XML/RSS parser","version":"3.0.4","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/htmlparser2.git"},"bugs":{"mail":"me@feedic.com","url":"http://github.com/fb55/htmlparser2/issues"},"directories":{"lib":"lib/"},"main":"lib/index.js","scripts":{"test":"node tests/00-runtests.js"},"dependencies":{"domhandler":"2.0","domutils":"1.1","domelementtype":"1","readable-stream":"1.0"},"licenses":[{"type":"MIT","url":"http://github.com/fb55/htmlparser2/raw/master/LICENSE"}],"readme":"#htmlparser2 [![Build Status](https://secure.travis-ci.org/fb55/htmlparser2.png)](http://travis-ci.org/fb55/htmlparser2)\n\nA forgiving HTML/XML/RSS parser written in JS for NodeJS. The parser can handle streams (chunked data) and supports custom handlers for writing custom DOMs/output.\n\n##Installing\n\tnpm install htmlparser2\n\n##Usage\n\n```javascript\nvar htmlparser = require(\"htmlparser2\");\nvar parser = new htmlparser.Parser({\n\tonopentag: function(name, attribs){\n\t\tif(name === \"script\" && attribs.type === \"text/javascript\"){\n\t\t\tconsole.log(\"JS! Hooray!\");\n\t\t}\n\t},\n\tontext: function(text){\n\t\tconsole.log(\"-->\", text);\n\t},\n\tonclosetag: function(tagname){\n\t\tif(tagname === \"script\"){\n\t\t\tconsole.log(\"That's it?!\");\n\t\t}\n\t}\n});\nparser.write(\"Xyz <script type='text/javascript'>var foo = '<<bar>>';< /  script>\");\nparser.end();\n```\n\nOutput (simplified):\n\n```javascript\n--> Xyz \nJS! Hooray!\n--> var foo = '<<bar>>';\nThat's it?!\n```\n\nRead more about the parser in the [wiki](https://github.com/fb55/htmlparser2/wiki/Parser-options).\n\n##Get a DOM\nThe `DomHandler` (known as `DefaultHandler` in the original `htmlparser` module) produces a DOM (document object model) that can be manipulated using the [`DomUtils`](https://github.com/fb55/DomUtils) helper.\n\nThe `DomHandler`, while still bundled with this module, was moved to it's [own module](https://github.com/fb55/domhandler). Have a look at it for further information.\n\n##Parsing RSS/RDF/Atom Feeds\n\n```javascript\nnew htmlparser.FeedHandler(function(<error> error, <object> feed){\n    ...\n});\n```\n\n##Performance\nUsing a modified version of [node-expat](https://github.com/astro/node-expat)'s `bench.js`, I received the following results (on OSX):\n\n```\nnode-xml:     28.03 ms/el\nlibxmljs:     11.11 ms/el\nsax:          26.92 ms/el\nnode-expat:   07.32 ms/el\nhtmlparser:   16.40 ms/el\nhtmlparser2:  06.32 ms/el\n\nWinner: htmlparser2\n```\n\nThe test can be found in [`tests/bench.js`](tests/bench.js).\n\n##How is this different from [node-htmlparser](https://github.com/tautologistics/node-htmlparser)?\nThis is a fork of the `htmlparser` module. The main difference is that this is intended to be used only with node (it runs on other platforms using [browserify](https://github.com/substack/node-browserify)). `htmlparser2` was rewritten multiple times and, while it maintains an API that's compatible with `htmlparser` in most cases, the projects don't share any code anymore.\n\nThe parser now provides a callback interface close to [sax.js](https://github.com/isaacs/sax-js) (originally targeted at [readabilitySAX](https://github.com/fb55/readabilitysax)). As a result, old handlers won't work anymore.\n\nThe `DefaultHandler` and the `RssHandler` were renamed to clarify their purpose (to `DomHandler` and `FeedHandler`). The old names are still available when requiring `htmlparser2`, so your code should work as expected.\n","readmeFilename":"README.md","_id":"htmlparser2@3.0.4","dist":{"shasum":"9e81c739e20ca5dc3f82b640031d401daed77f4d","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-3.0.4.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"feedic","email":"me@feedic.com"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"3.0.5":{"name":"htmlparser2","description":"Fast & forgiving HTML/XML/RSS parser","version":"3.0.5","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/htmlparser2.git"},"bugs":{"mail":"me@feedic.com","url":"http://github.com/fb55/htmlparser2/issues"},"directories":{"lib":"lib/"},"main":"lib/index.js","scripts":{"test":"node tests/00-runtests.js"},"dependencies":{"domhandler":"2.0","domutils":"1.1","domelementtype":"1","readable-stream":"1.0"},"licenses":[{"type":"MIT","url":"http://github.com/fb55/htmlparser2/raw/master/LICENSE"}],"readme":"#htmlparser2 [![Build Status](https://secure.travis-ci.org/fb55/htmlparser2.png)](http://travis-ci.org/fb55/htmlparser2)\n\nA forgiving HTML/XML/RSS parser written in JS for NodeJS. The parser can handle streams (chunked data) and supports custom handlers for writing custom DOMs/output.\n\n##Installing\n\tnpm install htmlparser2\n\n##Usage\n\n```javascript\nvar htmlparser = require(\"htmlparser2\");\nvar parser = new htmlparser.Parser({\n\tonopentag: function(name, attribs){\n\t\tif(name === \"script\" && attribs.type === \"text/javascript\"){\n\t\t\tconsole.log(\"JS! Hooray!\");\n\t\t}\n\t},\n\tontext: function(text){\n\t\tconsole.log(\"-->\", text);\n\t},\n\tonclosetag: function(tagname){\n\t\tif(tagname === \"script\"){\n\t\t\tconsole.log(\"That's it?!\");\n\t\t}\n\t}\n});\nparser.write(\"Xyz <script type='text/javascript'>var foo = '<<bar>>';< /  script>\");\nparser.end();\n```\n\nOutput (simplified):\n\n```javascript\n--> Xyz \nJS! Hooray!\n--> var foo = '<<bar>>';\nThat's it?!\n```\n\nRead more about the parser in the [wiki](https://github.com/fb55/htmlparser2/wiki/Parser-options).\n\n##Get a DOM\nThe `DomHandler` (known as `DefaultHandler` in the original `htmlparser` module) produces a DOM (document object model) that can be manipulated using the [`DomUtils`](https://github.com/fb55/DomUtils) helper.\n\nThe `DomHandler`, while still bundled with this module, was moved to it's [own module](https://github.com/fb55/domhandler). Have a look at it for further information.\n\n##Parsing RSS/RDF/Atom Feeds\n\n```javascript\nnew htmlparser.FeedHandler(function(<error> error, <object> feed){\n    ...\n});\n```\n\n##Performance\nUsing a modified version of [node-expat](https://github.com/astro/node-expat)'s `bench.js`, I received the following results (on OSX):\n\n```\nnode-xml:     28.03 ms/el\nlibxmljs:     11.11 ms/el\nsax:          26.92 ms/el\nnode-expat:   07.32 ms/el\nhtmlparser:   16.40 ms/el\nhtmlparser2:  06.32 ms/el\n\nWinner: htmlparser2\n```\n\nThe test can be found in [`tests/bench.js`](tests/bench.js).\n\n##How is this different from [node-htmlparser](https://github.com/tautologistics/node-htmlparser)?\nThis is a fork of the `htmlparser` module. The main difference is that this is intended to be used only with node (it runs on other platforms using [browserify](https://github.com/substack/node-browserify)). `htmlparser2` was rewritten multiple times and, while it maintains an API that's compatible with `htmlparser` in most cases, the projects don't share any code anymore.\n\nThe parser now provides a callback interface close to [sax.js](https://github.com/isaacs/sax-js) (originally targeted at [readabilitySAX](https://github.com/fb55/readabilitysax)). As a result, old handlers won't work anymore.\n\nThe `DefaultHandler` and the `RssHandler` were renamed to clarify their purpose (to `DomHandler` and `FeedHandler`). The old names are still available when requiring `htmlparser2`, so your code should work as expected.\n","readmeFilename":"README.md","_id":"htmlparser2@3.0.5","dist":{"shasum":"7f30608cb7809f35ff7c6dd80e29c247aa7daf5f","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-3.0.5.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"feedic","email":"me@feedic.com"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"3.1.1":{"name":"htmlparser2","description":"Fast & forgiving HTML/XML/RSS parser","version":"3.1.1","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/htmlparser2.git"},"bugs":{"url":"http://github.com/fb55/htmlparser2/issues"},"directories":{"lib":"lib/"},"main":"lib/index.js","scripts":{"test":"node tests/00-runtests.js"},"dependencies":{"domhandler":"2.0","domutils":"1.1","domelementtype":"1","readable-stream":"1.0"},"licenses":[{"type":"MIT","url":"http://github.com/fb55/htmlparser2/raw/master/LICENSE"}],"readme":"#htmlparser2 [![Build Status](https://secure.travis-ci.org/fb55/htmlparser2.png)](http://travis-ci.org/fb55/htmlparser2)\n\nA forgiving HTML/XML/RSS parser written in JS for NodeJS. The parser can handle streams (chunked data) and supports custom handlers for writing custom DOMs/output.\n\n##Installing\n\tnpm install htmlparser2\n\n##Usage\n\n```javascript\nvar htmlparser = require(\"htmlparser2\");\nvar parser = new htmlparser.Parser({\n\tonopentag: function(name, attribs){\n\t\tif(name === \"script\" && attribs.type === \"text/javascript\"){\n\t\t\tconsole.log(\"JS! Hooray!\");\n\t\t}\n\t},\n\tontext: function(text){\n\t\tconsole.log(\"-->\", text);\n\t},\n\tonclosetag: function(tagname){\n\t\tif(tagname === \"script\"){\n\t\t\tconsole.log(\"That's it?!\");\n\t\t}\n\t}\n});\nparser.write(\"Xyz <script type='text/javascript'>var foo = '<<bar>>';< /  script>\");\nparser.end();\n```\n\nOutput (simplified):\n\n```javascript\n--> Xyz \nJS! Hooray!\n--> var foo = '<<bar>>';\nThat's it?!\n```\n\nRead more about the parser in the [wiki](https://github.com/fb55/htmlparser2/wiki/Parser-options).\n\n##Get a DOM\nThe `DomHandler` (known as `DefaultHandler` in the original `htmlparser` module) produces a DOM (document object model) that can be manipulated using the [`DomUtils`](https://github.com/fb55/DomUtils) helper.\n\nThe `DomHandler`, while still bundled with this module, was moved to it's [own module](https://github.com/fb55/domhandler). Have a look at it for further information.\n\n##Parsing RSS/RDF/Atom Feeds\n\n```javascript\nnew htmlparser.FeedHandler(function(<error> error, <object> feed){\n    ...\n});\n```\n\n##Performance\nUsing a modified version of [node-expat](https://github.com/astro/node-expat)'s `bench.js`, I received the following results (on OSX):\n\n```\nnode-xml:     28.03 ms/el\nlibxmljs:     11.11 ms/el\nsax:          26.92 ms/el\nnode-expat:   07.32 ms/el\nhtmlparser:   16.40 ms/el\nhtmlparser2:  06.32 ms/el\n\nWinner: htmlparser2\n```\n\nThe test can be found in [`tests/bench.js`](tests/bench.js).\n\n##How is this different from [node-htmlparser](https://github.com/tautologistics/node-htmlparser)?\nThis is a fork of the `htmlparser` module. The main difference is that this is intended to be used only with node (it runs on other platforms using [browserify](https://github.com/substack/node-browserify)). `htmlparser2` was rewritten multiple times and, while it maintains an API that's compatible with `htmlparser` in most cases, the projects don't share any code anymore.\n\nThe parser now provides a callback interface close to [sax.js](https://github.com/isaacs/sax-js) (originally targeted at [readabilitySAX](https://github.com/fb55/readabilitysax)). As a result, old handlers won't work anymore.\n\nThe `DefaultHandler` and the `RssHandler` were renamed to clarify their purpose (to `DomHandler` and `FeedHandler`). The old names are still available when requiring `htmlparser2`, so your code should work as expected.\n","readmeFilename":"README.md","_id":"htmlparser2@3.1.1","dist":{"shasum":"b4e24d445396f084e17c5f91f6d8cc59505dbb5d","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-3.1.1.tgz"},"_from":".","_npmVersion":"1.2.24","_npmUser":{"name":"feedic","email":"me@feedic.com"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"3.1.2":{"name":"htmlparser2","description":"Fast & forgiving HTML/XML/RSS parser","version":"3.1.2","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/htmlparser2.git"},"bugs":{"url":"http://github.com/fb55/htmlparser2/issues"},"directories":{"lib":"lib/"},"main":"lib/index.js","scripts":{"test":"node tests/00-runtests.js"},"dependencies":{"domhandler":"2.0","domutils":"1.1","domelementtype":"1","readable-stream":"1.0"},"licenses":[{"type":"MIT","url":"http://github.com/fb55/htmlparser2/raw/master/LICENSE"}],"readme":"#htmlparser2 [![Build Status](https://secure.travis-ci.org/fb55/htmlparser2.png)](http://travis-ci.org/fb55/htmlparser2)\n\nA forgiving HTML/XML/RSS parser written in JS for NodeJS. The parser can handle streams (chunked data) and supports custom handlers for writing custom DOMs/output.\n\n##Installing\n\tnpm install htmlparser2\n\n##Usage\n\n```javascript\nvar htmlparser = require(\"htmlparser2\");\nvar parser = new htmlparser.Parser({\n\tonopentag: function(name, attribs){\n\t\tif(name === \"script\" && attribs.type === \"text/javascript\"){\n\t\t\tconsole.log(\"JS! Hooray!\");\n\t\t}\n\t},\n\tontext: function(text){\n\t\tconsole.log(\"-->\", text);\n\t},\n\tonclosetag: function(tagname){\n\t\tif(tagname === \"script\"){\n\t\t\tconsole.log(\"That's it?!\");\n\t\t}\n\t}\n});\nparser.write(\"Xyz <script type='text/javascript'>var foo = '<<bar>>';< /  script>\");\nparser.end();\n```\n\nOutput (simplified):\n\n```javascript\n--> Xyz \nJS! Hooray!\n--> var foo = '<<bar>>';\nThat's it?!\n```\n\nRead more about the parser in the [wiki](https://github.com/fb55/htmlparser2/wiki/Parser-options).\n\n##Get a DOM\nThe `DomHandler` (known as `DefaultHandler` in the original `htmlparser` module) produces a DOM (document object model) that can be manipulated using the [`DomUtils`](https://github.com/fb55/DomUtils) helper.\n\nThe `DomHandler`, while still bundled with this module, was moved to it's [own module](https://github.com/fb55/domhandler). Have a look at it for further information.\n\n##Parsing RSS/RDF/Atom Feeds\n\n```javascript\nnew htmlparser.FeedHandler(function(<error> error, <object> feed){\n    ...\n});\n```\n\n##Performance\nUsing a modified version of [node-expat](https://github.com/astro/node-expat)'s `bench.js`, I received the following results (on OSX):\n\n```\nnode-xml:     28.03 ms/el\nlibxmljs:     11.11 ms/el\nsax:          26.92 ms/el\nnode-expat:   07.32 ms/el\nhtmlparser:   16.40 ms/el\nhtmlparser2:  06.32 ms/el\n\nWinner: htmlparser2\n```\n\nThe test can be found in [`tests/bench.js`](tests/bench.js).\n\n##How is this different from [node-htmlparser](https://github.com/tautologistics/node-htmlparser)?\nThis is a fork of the `htmlparser` module. The main difference is that this is intended to be used only with node (it runs on other platforms using [browserify](https://github.com/substack/node-browserify)). `htmlparser2` was rewritten multiple times and, while it maintains an API that's compatible with `htmlparser` in most cases, the projects don't share any code anymore.\n\nThe parser now provides a callback interface close to [sax.js](https://github.com/isaacs/sax-js) (originally targeted at [readabilitySAX](https://github.com/fb55/readabilitysax)). As a result, old handlers won't work anymore.\n\nThe `DefaultHandler` and the `RssHandler` were renamed to clarify their purpose (to `DomHandler` and `FeedHandler`). The old names are still available when requiring `htmlparser2`, so your code should work as expected.\n","readmeFilename":"README.md","_id":"htmlparser2@3.1.2","dist":{"shasum":"9dfc4a292743a4ce9d321a396ae7a55d98fda30b","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-3.1.2.tgz"},"_from":".","_npmVersion":"1.2.24","_npmUser":{"name":"feedic","email":"me@feedic.com"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]},"3.1.3":{"name":"htmlparser2","description":"Fast & forgiving HTML/XML/RSS parser","version":"3.1.3","author":{"name":"Felix Boehm","email":"me@feedic.com"},"keywords":["html","parser","streams","xml","dom","rss","feed","atom"],"contributors":[{"name":"Chris Winberry","email":"chris@winberry.net"}],"repository":{"type":"git","url":"git://github.com/fb55/htmlparser2.git"},"bugs":{"url":"http://github.com/fb55/htmlparser2/issues"},"directories":{"lib":"lib/"},"main":"lib/index.js","scripts":{"test":"node tests/00-runtests.js"},"dependencies":{"domhandler":"2.0","domutils":"1.1","domelementtype":"1","readable-stream":"1.0"},"licenses":[{"type":"MIT","url":"http://github.com/fb55/htmlparser2/raw/master/LICENSE"}],"readme":"#htmlparser2 [![NPM version](https://badge.fury.io/js/htmlparser2.png)](https://npmjs.org/package/htmlparser2) [![Build Status](https://secure.travis-ci.org/fb55/htmlparser2.png)](http://travis-ci.org/fb55/htmlparser2) [![Dependency Status](https://david-dm.org/fb55/htmlparser2.png)](https://david-dm.org/fb55/htmlparser2)\n\nA forgiving HTML/XML/RSS parser written in JS for NodeJS. The parser can handle streams (chunked data) and supports custom handlers for writing custom DOMs/output.\n\n##Installing\n\tnpm install htmlparser2\n\n##Usage\n\n```javascript\nvar htmlparser = require(\"htmlparser2\");\nvar parser = new htmlparser.Parser({\n\tonopentag: function(name, attribs){\n\t\tif(name === \"script\" && attribs.type === \"text/javascript\"){\n\t\t\tconsole.log(\"JS! Hooray!\");\n\t\t}\n\t},\n\tontext: function(text){\n\t\tconsole.log(\"-->\", text);\n\t},\n\tonclosetag: function(tagname){\n\t\tif(tagname === \"script\"){\n\t\t\tconsole.log(\"That's it?!\");\n\t\t}\n\t}\n});\nparser.write(\"Xyz <script type='text/javascript'>var foo = '<<bar>>';< /  script>\");\nparser.end();\n```\n\nOutput (simplified):\n\n```javascript\n--> Xyz \nJS! Hooray!\n--> var foo = '<<bar>>';\nThat's it?!\n```\n\nRead more about the parser in the [wiki](https://github.com/fb55/htmlparser2/wiki/Parser-options).\n\n##Get a DOM\nThe `DomHandler` (known as `DefaultHandler` in the original `htmlparser` module) produces a DOM (document object model) that can be manipulated using the [`DomUtils`](https://github.com/fb55/DomUtils) helper.\n\nThe `DomHandler`, while still bundled with this module, was moved to it's [own module](https://github.com/fb55/domhandler). Have a look at it for further information.\n\n##Parsing RSS/RDF/Atom Feeds\n\n```javascript\nnew htmlparser.FeedHandler(function(<error> error, <object> feed){\n    ...\n});\n```\n\n##Performance\nUsing a modified version of [node-expat](https://github.com/astro/node-expat)'s `bench.js`, I received the following results (on OSX):\n\n```\nnode-xml:     28.03 ms/el\nlibxmljs:     11.11 ms/el\nsax:          26.92 ms/el\nnode-expat:   07.32 ms/el\nhtmlparser:   16.40 ms/el\nhtmlparser2:  06.32 ms/el\n\nWinner: htmlparser2\n```\n\nThe test can be found in [`tests/bench.js`](tests/bench.js).\n\n##How is this different from [node-htmlparser](https://github.com/tautologistics/node-htmlparser)?\nThis is a fork of the `htmlparser` module. The main difference is that this is intended to be used only with node (it runs on other platforms using [browserify](https://github.com/substack/node-browserify)). `htmlparser2` was rewritten multiple times and, while it maintains an API that's compatible with `htmlparser` in most cases, the projects don't share any code anymore.\n\nThe parser now provides a callback interface close to [sax.js](https://github.com/isaacs/sax-js) (originally targeted at [readabilitySAX](https://github.com/fb55/readabilitysax)). As a result, old handlers won't work anymore.\n\nThe `DefaultHandler` and the `RssHandler` were renamed to clarify their purpose (to `DomHandler` and `FeedHandler`). The old names are still available when requiring `htmlparser2`, so your code should work as expected.\n","readmeFilename":"README.md","_id":"htmlparser2@3.1.3","dist":{"shasum":"f222119d3b30fa6da2c43a6c16ed89fd86d76e14","tarball":"http://registry.npmjs.org/htmlparser2/-/htmlparser2-3.1.3.tgz"},"_from":".","_npmVersion":"1.2.24","_npmUser":{"name":"feedic","email":"me@feedic.com"},"maintainers":[{"name":"feedic","email":"me@feedic.com"}]}},"maintainers":[{"name":"feedic","email":"me@feedic.com"}],"time":{"1.0.0":"2011-08-28T11:32:27.937Z","1.1.0":"2011-10-21T12:40:26.907Z","1.5.0":"2011-11-05T19:04:15.797Z","2.0.0":"2011-11-27T14:02:55.423Z","2.0.1":"2011-12-10T00:00:12.167Z","2.1.0":"2011-12-18T19:22:18.441Z","2.1.1":"2011-12-19T21:29:29.891Z","2.1.2":"2011-12-21T10:59:45.739Z","2.1.3":"2011-12-28T12:33:51.266Z","2.2.0":"2012-01-13T16:25:13.219Z","2.2.2":"2012-01-17T08:51:09.288Z","2.2.3":"2012-01-28T22:24:55.010Z","2.2.4":"2012-03-04T17:40:18.138Z","2.2.5":"2012-04-18T19:33:50.948Z","2.2.6":"2012-04-26T08:44:14.289Z","2.2.7":"2012-04-26T09:27:02.032Z","2.2.8":"2012-05-06T16:16:02.009Z","2.2.9":"2012-06-02T18:42:03.691Z","2.3.0":"2012-08-14T12:37:04.165Z","2.5.0":"2012-11-10T13:57:57.931Z","2.5.1":"2013-01-09T14:48:45.369Z","2.5.2":"2013-02-15T12:50:42.045Z","2.6.0":"2013-03-17T22:16:03.210Z","3.0.0":"2013-03-31T20:34:43.530Z","3.0.1":"2013-04-04T11:06:05.986Z","3.0.2":"2013-04-04T11:33:33.863Z","3.0.3":"2013-04-09T08:41:44.906Z","3.0.4":"2013-04-15T13:55:28.983Z","3.0.5":"2013-04-15T14:07:50.178Z","3.1.1":"2013-06-05T14:57:40.240Z","3.1.2":"2013-06-09T13:05:01.361Z","3.1.3":"2013-06-14T12:10:39.518Z"},"author":{"name":"Felix Boehm","email":"me@feedic.com"},"repository":{"type":"git","url":"git://github.com/fb55/htmlparser2.git"},"users":{"tivac":true},"_attachments":{"htmlparser2-3.1.3.tgz":{"content_type":"application/octet-stream","revpos":80,"digest":"md5-pvJf1yfh179yJCct34N4bA==","length":21229,"stub":true},"htmlparser2-3.1.2.tgz":{"content_type":"application/octet-stream","revpos":78,"digest":"md5-/8pO5y0Iz+KZcG/ARKGEuw==","length":20580,"stub":true},"htmlparser2-3.1.1.tgz":{"content_type":"application/octet-stream","revpos":76,"digest":"md5-HrRn7k5GH8LUfWfSPhjAug==","length":20483,"stub":true},"htmlparser2-3.0.5.tgz":{"content_type":"application/octet-stream","revpos":74,"digest":"md5-UJFMEYz8YhPVognr+sE8ew==","length":20069,"stub":true},"htmlparser2-3.0.4.tgz":{"content_type":"application/octet-stream","revpos":72,"digest":"md5-+aaxGjHmiY0bNIrrnrdryg==","length":20073,"stub":true},"htmlparser2-3.0.3.tgz":{"content_type":"application/octet-stream","revpos":70,"digest":"md5-0gGWbZXtZCvnjqktaTfpoQ==","length":17200,"stub":true},"htmlparser2-3.0.2.tgz":{"content_type":"application/octet-stream","revpos":68,"digest":"md5-k7mH4wPuHyhqwix1Jsq+3A==","length":17466,"stub":true},"htmlparser2-3.0.1.tgz":{"content_type":"application/octet-stream","revpos":66,"digest":"md5-ExnTe8igoPYTag7JmFSKHQ==","length":17428,"stub":true},"htmlparser2-3.0.0.tgz":{"content_type":"application/octet-stream","revpos":64,"digest":"md5-70Yu9wXWkuJLrqB9oQRGWA==","length":17395,"stub":true},"htmlparser2-2.6.0.tgz":{"content_type":"application/octet-stream","revpos":54,"digest":"md5-1vqbzPSLwHkPacXHpasSng==","length":16952,"stub":true},"htmlparser2-2.5.2.tgz":{"content_type":"application/octet-stream","revpos":53,"digest":"md5-tvYTumCj2CslD1L7MeNKXQ==","length":14364,"stub":true},"htmlparser2-2.5.1.tgz":{"content_type":"application/octet-stream","revpos":51,"digest":"md5-iZmeUTZOCMU9dfDpn7HnQw==","length":14404,"stub":true},"htmlparser2-2.5.0.tgz":{"content_type":"application/octet-stream","revpos":48,"digest":"md5-RezFY9z7PEXEZqnz3Z2W5A==","length":14373,"stub":true},"htmlparser2-2.3.0.tgz":{"content_type":"application/octet-stream","revpos":46,"digest":"md5-flLO8LsKsNU1mi+UtazQLA==","length":20177,"stub":true},"htmlparser2-2.2.9.tgz":{"content_type":"application/octet-stream","revpos":44,"digest":"md5-Xg/o1ZhspMHbDk7cBde4Kg==","length":20139,"stub":true},"htmlparser2-2.2.8.tgz":{"content_type":"application/octet-stream","revpos":42,"digest":"md5-QjNSsHX+g5BvilyjgGk3Dg==","length":20100,"stub":true},"htmlparser2-2.2.7.tgz":{"content_type":"application/octet-stream","revpos":40,"digest":"md5-tv6Tz8lMf/gwGWZFMh93Zg==","length":20085,"stub":true},"htmlparser2-2.2.6.tgz":{"content_type":"application/octet-stream","revpos":38,"digest":"md5-YqpFkMO6qoQHXVpX86BpYg==","length":20258,"stub":true},"htmlparser2-2.2.5.tgz":{"content_type":"application/octet-stream","revpos":36,"digest":"md5-19S/E6pV2F59P1YfsOEELg==","length":20257,"stub":true},"htmlparser2-2.2.4.tgz":{"content_type":"application/octet-stream","revpos":34,"digest":"md5-6Bga3MlczJuonKs1f2nz0g==","length":20386,"stub":true},"htmlparser2-2.2.3.tgz":{"content_type":"application/octet-stream","revpos":32,"digest":"md5-Sl/IlMwBRH9WbwL1DUhGBw==","length":20480,"stub":true},"htmlparser2-2.2.2.tgz":{"content_type":"application/octet-stream","revpos":30,"digest":"md5-KmMS+t9h5ChreQ8pGAGh8g==","length":20480,"stub":true},"htmlparser2-2.2.1.tgz":{"content_type":"application/octet-stream","revpos":27,"digest":"md5-YFb6QD7vVipMEca+dj6CuQ==","length":20480,"stub":true},"htmlparser2-2.2.0.tgz":{"content_type":"application/octet-stream","revpos":25,"digest":"md5-tWo2Xq0T266R/Wwz6EQG8A==","length":20480,"stub":true},"htmlparser2-2.1.3.tgz":{"content_type":"application/octet-stream","revpos":23,"digest":"md5-z/Rg2iteRHL0ZgxTDKuh3A==","length":20480,"stub":true},"htmlparser2-2.1.2.tgz":{"content_type":"application/octet-stream","revpos":21,"digest":"md5-ycFIBtExVA4Gw2d00UOkhg==","length":20480,"stub":true},"htmlparser2-2.1.1.tgz":{"content_type":"application/octet-stream","revpos":19,"digest":"md5-TmJyG6J47Fq8pNBo0tlImw==","length":20480,"stub":true},"htmlparser2-2.1.0.tgz":{"content_type":"application/octet-stream","revpos":17,"digest":"md5-wmWy64t+x/sLeFum/gOMsA==","length":20480,"stub":true},"htmlparser2-2.0.1.tgz":{"content_type":"application/octet-stream","revpos":15,"digest":"md5-KEKDK0sw4tHAm8cYa3EjWQ==","length":20480,"stub":true},"htmlparser2-2.0.0.tgz":{"content_type":"application/octet-stream","revpos":13,"digest":"md5-IW2IFYfJ/eWsWE7NKaIYEQ==","length":20480,"stub":true},"htmlparser2-1.5.0.tgz":{"content_type":"application/octet-stream","revpos":7,"digest":"md5-VerFeCZoWvbbLQsPu59wlw==","length":20480,"stub":true},"htmlparser2-1.1.0.tgz":{"content_type":"application/octet-stream","revpos":5,"digest":"md5-DGq6bPKE70WX0UO4Lo0Y4w==","length":14891,"stub":true},"htmlparser2-1.0.0.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-s9X4uIRTgu8JgU9kdEIShQ==","length":14912,"stub":true}},"_etag":"\"DJRQ3TQ59RWMDLCPLYF26LX44\""}