{"name":"roaster","description":"Turns a raw and crunchy Markdown file into nice and smooth output","author":{"name":"Garen J. Torikian"},"version":"0.0.5","main":"lib/roaster.js","preferGlobal":false,"repository":{"type":"git","url":"git://github.com/gjtorikian/roaster.git"},"homepage":"https://github.com/gjtorikian/roaster","bugs":{"url":"http://github.com/gjtorikian/roaster/issues"},"dependencies":{"marked":"0.2.8","emoji-images":"0.0.2","task-lists":"0.0.2"},"devDependencies":{"coffee-script":">= 1.3"},"scripts":{"prepublish":"./scripts/build"},"engines":{"node":">= 0.8.0"},"readme":"Asynchronously convert a Markdown file into HTML. WOW!\n\nYou can specify either the contents of a file, or, the path to a file to read.\n## Usage\n\n```javascript\nrequire('coffee-script');\nvar roaster = require(\"../src/roaster\");\nvar fs = require(\"fs\");\nvar options = {}\n\nroaster(\"./markdown.md\", options, function(err, contents) {\n\tfs.writeFileSync(\"./markdown.html\", contents, \"utf8\");\n});\n```\n\n## Options\n\nAll options are passed to `marked` for rendering.\n\nIf you pass `options.isFile`, the first parameter is assumed to be a file path.\nBy default, this is `false`, which means that the first parameter is the string\ncontents.\n\n## Libraries used\n\n* [marked](https://github.com/chjj/marked) for Markdown conversion\n* [emoji-images](https://github.com/henrikjoreteg/emoji-images.js) for emoji conversion\n","readmeFilename":"README.md","_id":"roaster@0.0.5","dist":{"shasum":"4b3c4aab459a2b782b2e1c9f39461c435e175190","tarball":"http://registry.npmjs.org/roaster/-/roaster-0.0.5.tgz"},"_from":".","_npmVersion":"1.2.17","_npmUser":{"name":"gjtorikian","email":"gjtorikian@gmail.com"},"maintainers":[{"name":"gjtorikian","email":"gjtorikian@gmail.com"}],"directories":{},"_etag":"\"5QKS48VB76WTHZUT7KGBN08OF\""}