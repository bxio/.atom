{"_id":"marked","_rev":"77-9de11b9e7cd7facf5c50fd5c3b5b940b","name":"marked","description":"A markdown parser built for speed","dist-tags":{"latest":"0.2.8"},"versions":{"0.0.1":{"name":"marked","description":"a fast markdown parser","author":{"name":"Christopher Jeffrey"},"version":"0.0.1","main":"./lib/marked.js","repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"keywords":["markdown","markup"],"dependencies":{},"devDependencies":{},"_id":"marked@0.0.1","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.3","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"3c4a985ac69917db567d792c90f89eeda2109016","tarball":"http://registry.npmjs.org/marked/-/marked-0.0.1.tgz"},"scripts":{},"directories":{}},"0.0.2":{"name":"marked","description":"a fast markdown parser","author":{"name":"Christopher Jeffrey"},"version":"0.0.2","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"keywords":["markdown","markup"],"_npmJsonOpts":{"file":"/home/cjj/.npm/marked/0.0.2/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"marked@0.0.2","dependencies":{},"devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"40b9216d532b5ed5835bcfea962b732fbd1ed530","tarball":"http://registry.npmjs.org/marked/-/marked-0.0.2.tgz"},"scripts":{},"maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.0.3":{"name":"marked","description":"a fast markdown parser","author":{"name":"Christopher Jeffrey"},"version":"0.0.3","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"keywords":["markdown","markup"],"_npmJsonOpts":{"file":"/home/cjj/.npm/marked/0.0.3/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"marked@0.0.3","dependencies":{},"devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"03ce1ffe876edd1803dfe782433f8e5c3a0c4629","tarball":"http://registry.npmjs.org/marked/-/marked-0.0.3.tgz"},"scripts":{},"maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.0.4":{"name":"marked","description":"a fast markdown parser","author":{"name":"Christopher Jeffrey"},"version":"0.0.4","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"keywords":["markdown","markup"],"_npmJsonOpts":{"file":"/home/cjj/.npm/marked/0.0.4/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"marked@0.0.4","dependencies":{},"devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"5bd4c4bbdce22d9b3270262ce8ad1d2f91f22590","tarball":"http://registry.npmjs.org/marked/-/marked-0.0.4.tgz"},"scripts":{},"maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.0.5":{"name":"marked","description":"a fast markdown parser","author":{"name":"Christopher Jeffrey"},"version":"0.0.5","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"keywords":["markdown","markup"],"_npmJsonOpts":{"file":"/home/cjj/.npm/marked/0.0.5/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"marked@0.0.5","dependencies":{},"devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"740eb9c0636e34532b7a83f133ad7c0aa96720ce","tarball":"http://registry.npmjs.org/marked/-/marked-0.0.5.tgz"},"scripts":{},"maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.0.6":{"name":"marked","description":"a fast markdown parser","author":{"name":"Christopher Jeffrey"},"version":"0.0.6","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"keywords":["markdown","markup"],"_npmJsonOpts":{"file":"/home/cjj/.npm/marked/0.0.6/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"marked@0.0.6","dependencies":{},"devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"f270bac4112c92b916ef28b65407278a87b560e6","tarball":"http://registry.npmjs.org/marked/-/marked-0.0.6.tgz"},"scripts":{},"maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.0.7":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.0.7","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"keywords":["markdown","markup"],"_npmJsonOpts":{"file":"/home/cjj/.npm/marked/0.0.7/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"marked@0.0.7","dependencies":{},"devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"b0eb28b6e6ab68dfbb07f7fe6d03ed98599d927a","tarball":"http://registry.npmjs.org/marked/-/marked-0.0.7.tgz"},"scripts":{},"maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.0.8":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.0.8","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"keywords":["markdown","markup"],"_npmJsonOpts":{"file":"/home/cjj/.npm/marked/0.0.8/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"marked@0.0.8","dependencies":{},"devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"5dbae0ece62ba34fc1eaac3c0db776f48a96b294","tarball":"http://registry.npmjs.org/marked/-/marked-0.0.8.tgz"},"scripts":{},"maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.0.9":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.0.9","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"keywords":["markdown","markup"],"_npmJsonOpts":{"file":"/home/cjj/.npm/marked/0.0.9/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"marked@0.0.9","dependencies":{},"devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"0f19f82aa913cf5d86b4cb426fd7a5932b570af4","tarball":"http://registry.npmjs.org/marked/-/marked-0.0.9.tgz"},"scripts":{},"maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.1.0":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.1.0","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"keywords":["markdown","markup"],"_npmJsonOpts":{"file":"/home/cjj/.npm/marked/0.1.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"marked@0.1.0","dependencies":{},"devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"c3c8247362e2c48a073e6dbc68e3ada30a23191e","tarball":"http://registry.npmjs.org/marked/-/marked-0.1.0.tgz"},"scripts":{},"maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.1.1":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.1.1","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"keywords":["markdown","markup"],"_npmJsonOpts":{"file":"/home/cjj/.npm/marked/0.1.1/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"marked@0.1.1","dependencies":{},"devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"c2720d7fbcc3c6eb3a87e403328f41cf95f8a613","tarball":"http://registry.npmjs.org/marked/-/marked-0.1.1.tgz"},"scripts":{},"maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.1.2":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.1.2","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"keywords":["markdown","markup"],"_npmJsonOpts":{"file":"/home/cjj/.npm/marked/0.1.2/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"marked@0.1.2","dependencies":{},"devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"dd7c7cf6428fdeae9c4ac05a926b5bd82e24a45e","tarball":"http://registry.npmjs.org/marked/-/marked-0.1.2.tgz"},"scripts":{},"maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.1.3":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.1.3","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"keywords":["markdown","markup"],"_npmUser":{"name":"chjj","email":"chjjeffrey@gmail.com"},"_id":"marked@0.1.3","dependencies":{},"devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.0-alpha-2","_nodeVersion":"v0.6.3","_defaultsLoaded":true,"dist":{"shasum":"78eefb395cb1ed2736f26ef80d0b51c653af4e2d","tarball":"http://registry.npmjs.org/marked/-/marked-0.1.3.tgz"},"maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.1.4":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.1.4","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"keywords":["markdown","markup"],"_npmUser":{"name":"chjj","email":"chjjeffrey@gmail.com"},"_id":"marked@0.1.4","dependencies":{},"devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.0-alpha-2","_nodeVersion":"v0.6.3","_defaultsLoaded":true,"dist":{"shasum":"2f6045878c692ff5fd8378ca40a13a6d8d9778e4","tarball":"http://registry.npmjs.org/marked/-/marked-0.1.4.tgz"},"maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.1.5":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.1.5","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"keywords":["markdown","markup"],"_npmUser":{"name":"chjj","email":"chjjeffrey@gmail.com"},"_id":"marked@0.1.5","dependencies":{},"devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.0-beta-4","_nodeVersion":"v0.6.6","_defaultsLoaded":true,"dist":{"shasum":"db3557832a79e761a6e12e08c838da5f4ab5676f","tarball":"http://registry.npmjs.org/marked/-/marked-0.1.5.tgz"},"readme":"# marked\n\nA full-featured markdown parser and compiler.\nBuilt for speed.\n\n## Benchmarks\n\nnode v0.4.x\n\n``` bash\n$ node test --bench\nmarked completed in 12071ms.\nshowdown (reuse converter) completed in 27387ms.\nshowdown (new converter) completed in 75617ms.\nmarkdown-js completed in 70069ms.\n```\n\nnode v0.6.x\n\n``` bash\n$ node test --bench\nmarked completed in 7904ms.\nmarked (with gfm) completed in 8947ms.\ndiscount completed in 7171ms.\nshowdown (reuse converter) completed in 15729ms.\nshowdown (new converter) completed in 18149ms.\nmarkdown-js completed in 24521ms.\n```\n\n__Marked is now only ~700ms behind Discount (which is written in C).__\n\nFor those feeling skeptical: These benchmarks run the entire markdown test suite\n1000 times. The test suite tests every feature. It doesn't cater to specific\naspects.\n\nBenchmarks for other engines to come (?).\n\n## Install\n\n``` bash\n$ npm install marked\n```\n\n## Another javascript markdown parser\n\nThe point of marked was to create a markdown compiler where it was possible to\nfrequently parse huge chunks of markdown without having to worry about\ncaching the compiled output somehow...or blocking for an unnecesarily long time.\n\nmarked is very concise and still implements all markdown features. It is also\nnow fully compatible with the client-side.\n\nmarked more or less passes the official markdown test suite in its\nentirety. This is important because a surprising number of markdown compilers\ncannot pass more than a few tests. It was very difficult to get marked as\ncompliant as it is. It could have cut corners in several areas for the sake\nof performance, but did not in order to be exactly what you expect in terms\nof a markdown rendering. In fact, this is why marked could be considered at a\ndisadvantage in the benchmarks above.\n\nAlong with implementing every markdown feature, marked also implements\n[GFM features](http://github.github.com/github-flavored-markdown/).\n\n## Usage\n\n``` js\nvar marked = require('marked');\nconsole.log(marked('i am using __markdown__.'));\n```\n\nYou also have direct access to the lexer and parser if you so desire.\n\n``` js\nvar tokens = marked.lexer(str);\nconsole.log(marked.parser(tokens));\n```\n\n``` bash\n$ node\n> require('marked').lexer('> i am using marked.')\n[ { type: 'blockquote_start' },\n  { type: 'text', text: ' i am using marked.' },\n  { type: 'blockquote_end' },\n  links: {} ]\n```\n\n## CLI\n\n``` bash\n$ marked -o hello.html\nhello world\n^D\n$ cat hello.html\n<p>hello world</p>\n```\n\n## Syntax Highlighting\n\nMarked has an interface that allows for a syntax highlighter to highlight code\nblocks before they're output.\n\nExample implementation:\n\n``` js\nvar highlight = require('my-syntax-highlighter')\n  , marked_ = require('marked');\n\nvar marked = function(text) {\n  var tokens = marked_.lexer(text)\n    , l = tokens.length\n    , i = 0\n    , token;\n\n  for (; i < l; i++) {\n    token = tokens[i];\n    if (token.type === 'code') {\n      token.text = highlight(token.text, token.lang);\n      // marked should not escape this\n      token.escaped = true;\n    }\n  }\n\n  text = marked_.parser(tokens);\n\n  return text;\n};\n\nmodule.exports = marked;\n```\n\n## License\n\nCopyright (c) 2011-2012, Christopher Jeffrey. (MIT License)\n\nSee LICENSE for more info.\n","maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.1.6":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.1.6","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"bugs":{"url":"http://github.com/chjj/marked/issues"},"keywords":["markdown","markup","html"],"tags":["markdown","markup","html"],"_npmUser":{"name":"chjj","email":"chjjeffrey@gmail.com"},"_id":"marked@0.1.6","dependencies":{},"devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.0-beta-10","_nodeVersion":"v0.6.7","_defaultsLoaded":true,"dist":{"shasum":"e14236c210de1a7497a1c67089724fbb8cc478ce","tarball":"http://registry.npmjs.org/marked/-/marked-0.1.6.tgz"},"readme":"# marked\n\nA full-featured markdown parser and compiler.\nBuilt for speed.\n\n## Benchmarks\n\nnode v0.4.x\n\n``` bash\n$ node test --bench\nmarked completed in 12071ms.\nshowdown (reuse converter) completed in 27387ms.\nshowdown (new converter) completed in 75617ms.\nmarkdown-js completed in 70069ms.\n```\n\nnode v0.6.x\n\n``` bash\n$ node test --bench\nmarked completed in 7303ms.\nmarked (with gfm) completed in 8206ms.\ndiscount completed in 7170ms.\nshowdown (reuse converter) completed in 15865ms.\nshowdown (new converter) completed in 18140ms.\nmarkdown-js completed in 24357ms.\n```\n\n__Marked is now only ~130ms behind Discount, which is written in C.__\n\nFor those feeling skeptical: These benchmarks run the entire markdown test suite\n1000 times. The test suite tests every feature. It doesn't cater to specific\naspects.\n\nBenchmarks for other engines to come (?).\n\n## Install\n\n``` bash\n$ npm install marked\n```\n\n## Another javascript markdown parser\n\nThe point of marked was to create a markdown compiler where it was possible to\nfrequently parse huge chunks of markdown without having to worry about\ncaching the compiled output somehow...or blocking for an unnecesarily long time.\n\nmarked is very concise and still implements all markdown features. It is also\nnow fully compatible with the client-side.\n\nmarked more or less passes the official markdown test suite in its\nentirety. This is important because a surprising number of markdown compilers\ncannot pass more than a few tests. It was very difficult to get marked as\ncompliant as it is. It could have cut corners in several areas for the sake\nof performance, but did not in order to be exactly what you expect in terms\nof a markdown rendering. In fact, this is why marked could be considered at a\ndisadvantage in the benchmarks above.\n\nAlong with implementing every markdown feature, marked also implements\n[GFM features](http://github.github.com/github-flavored-markdown/).\n\n## Usage\n\n``` js\nvar marked = require('marked');\nconsole.log(marked('i am using __markdown__.'));\n```\n\nYou also have direct access to the lexer and parser if you so desire.\n\n``` js\nvar tokens = marked.lexer(str);\nconsole.log(marked.parser(tokens));\n```\n\n``` bash\n$ node\n> require('marked').lexer('> i am using marked.')\n[ { type: 'blockquote_start' },\n  { type: 'text', text: ' i am using marked.' },\n  { type: 'blockquote_end' },\n  links: {} ]\n```\n\n## CLI\n\n``` bash\n$ marked -o hello.html\nhello world\n^D\n$ cat hello.html\n<p>hello world</p>\n```\n\n## Syntax Highlighting\n\nMarked has an interface that allows for a syntax highlighter to highlight code\nblocks before they're output.\n\nExample implementation:\n\n``` js\nvar highlight = require('my-syntax-highlighter')\n  , marked_ = require('marked');\n\nvar marked = function(text) {\n  var tokens = marked_.lexer(text)\n    , l = tokens.length\n    , i = 0\n    , token;\n\n  for (; i < l; i++) {\n    token = tokens[i];\n    if (token.type === 'code') {\n      token.text = highlight(token.text, token.lang);\n      // marked should not escape this\n      token.escaped = true;\n    }\n  }\n\n  text = marked_.parser(tokens);\n\n  return text;\n};\n\nmodule.exports = marked;\n```\n\n## License\n\nCopyright (c) 2011-2012, Christopher Jeffrey. (MIT License)\n\nSee LICENSE for more info.\n","maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.1.7":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.1.7","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"bugs":{"url":"http://github.com/chjj/marked/issues"},"keywords":["markdown","markup","html"],"tags":["markdown","markup","html"],"_npmUser":{"name":"chjj","email":"chjjeffrey@gmail.com"},"_id":"marked@0.1.7","dependencies":{},"devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.0-beta-10","_nodeVersion":"v0.6.7","_defaultsLoaded":true,"dist":{"shasum":"ad3b2c7e6c8681278255796a6db3720234839ce0","tarball":"http://registry.npmjs.org/marked/-/marked-0.1.7.tgz"},"readme":"# marked\n\nA full-featured markdown parser and compiler.\nBuilt for speed.\n\n## Benchmarks\n\nnode v0.4.x\n\n``` bash\n$ node test --bench\nmarked completed in 12071ms.\nshowdown (reuse converter) completed in 27387ms.\nshowdown (new converter) completed in 75617ms.\nmarkdown-js completed in 70069ms.\n```\n\nnode v0.6.x\n\n``` bash\n$ node test --bench\nmarked completed in 6623ms.\nmarked (with gfm) completed in 7618ms.\ndiscount completed in 7230ms.\nshowdown (reuse converter) completed in 16136ms.\nshowdown (new converter) completed in 18526ms.\nmarkdown-js completed in 24347ms.\n```\n\n__Marked is now faster than Discount, which is written in C.__\n\nFor those feeling skeptical: These benchmarks run the entire markdown test suite\n1000 times. The test suite tests every feature. It doesn't cater to specific\naspects.\n\nBenchmarks for other engines to come (?).\n\n## Install\n\n``` bash\n$ npm install marked\n```\n\n## Another javascript markdown parser\n\nThe point of marked was to create a markdown compiler where it was possible to\nfrequently parse huge chunks of markdown without having to worry about\ncaching the compiled output somehow...or blocking for an unnecesarily long time.\n\nmarked is very concise and still implements all markdown features. It is also\nnow fully compatible with the client-side.\n\nmarked more or less passes the official markdown test suite in its\nentirety. This is important because a surprising number of markdown compilers\ncannot pass more than a few tests. It was very difficult to get marked as\ncompliant as it is. It could have cut corners in several areas for the sake\nof performance, but did not in order to be exactly what you expect in terms\nof a markdown rendering. In fact, this is why marked could be considered at a\ndisadvantage in the benchmarks above.\n\nAlong with implementing every markdown feature, marked also implements\n[GFM features](http://github.github.com/github-flavored-markdown/).\n\n## Usage\n\n``` js\nvar marked = require('marked');\nconsole.log(marked('i am using __markdown__.'));\n```\n\nYou also have direct access to the lexer and parser if you so desire.\n\n``` js\nvar tokens = marked.lexer(str);\nconsole.log(marked.parser(tokens));\n```\n\n``` bash\n$ node\n> require('marked').lexer('> i am using marked.')\n[ { type: 'blockquote_start' },\n  { type: 'text', text: ' i am using marked.' },\n  { type: 'blockquote_end' },\n  links: {} ]\n```\n\n## CLI\n\n``` bash\n$ marked -o hello.html\nhello world\n^D\n$ cat hello.html\n<p>hello world</p>\n```\n\n## Syntax Highlighting\n\nMarked has an interface that allows for a syntax highlighter to highlight code\nblocks before they're output.\n\nExample implementation:\n\n``` js\nvar highlight = require('my-syntax-highlighter')\n  , marked_ = require('marked');\n\nvar marked = function(text) {\n  var tokens = marked_.lexer(text)\n    , l = tokens.length\n    , i = 0\n    , token;\n\n  for (; i < l; i++) {\n    token = tokens[i];\n    if (token.type === 'code') {\n      token.text = highlight(token.text, token.lang);\n      // marked should not escape this\n      token.escaped = true;\n    }\n  }\n\n  text = marked_.parser(tokens);\n\n  return text;\n};\n\nmodule.exports = marked;\n```\n\n## License\n\nCopyright (c) 2011-2012, Christopher Jeffrey. (MIT License)\n\nSee LICENSE for more info.\n","maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.1.8":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.1.8","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"bugs":{"url":"http://github.com/chjj/marked/issues"},"keywords":["markdown","markup","html"],"tags":["markdown","markup","html"],"_npmUser":{"name":"chjj","email":"chjjeffrey@gmail.com"},"_id":"marked@0.1.8","dependencies":{},"devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.0-beta-10","_nodeVersion":"v0.6.7","_defaultsLoaded":true,"dist":{"shasum":"ff3107eeb34b95d120a60b4f78e242cbcd06e53a","tarball":"http://registry.npmjs.org/marked/-/marked-0.1.8.tgz"},"readme":"# marked\n\nA full-featured markdown parser and compiler.\nBuilt for speed.\n\n## Benchmarks\n\nnode v0.4.x\n\n``` bash\n$ node test --bench\nmarked completed in 12071ms.\nshowdown (reuse converter) completed in 27387ms.\nshowdown (new converter) completed in 75617ms.\nmarkdown-js completed in 70069ms.\n```\n\nnode v0.6.x\n\n``` bash\n$ node test --bench\nmarked completed in 6623ms.\nmarked (with gfm) completed in 7618ms.\ndiscount completed in 7230ms.\nshowdown (reuse converter) completed in 16136ms.\nshowdown (new converter) completed in 18526ms.\nmarkdown-js completed in 24347ms.\n```\n\n__Marked is now faster than Discount, which is written in C.__\n\nFor those feeling skeptical: These benchmarks run the entire markdown test suite\n1000 times. The test suite tests every feature. It doesn't cater to specific\naspects.\n\nBenchmarks for other engines to come (?).\n\n## Install\n\n``` bash\n$ npm install marked\n```\n\n## Another javascript markdown parser\n\nThe point of marked was to create a markdown compiler where it was possible to\nfrequently parse huge chunks of markdown without having to worry about\ncaching the compiled output somehow...or blocking for an unnecesarily long time.\n\nmarked is very concise and still implements all markdown features. It is also\nnow fully compatible with the client-side.\n\nmarked more or less passes the official markdown test suite in its\nentirety. This is important because a surprising number of markdown compilers\ncannot pass more than a few tests. It was very difficult to get marked as\ncompliant as it is. It could have cut corners in several areas for the sake\nof performance, but did not in order to be exactly what you expect in terms\nof a markdown rendering. In fact, this is why marked could be considered at a\ndisadvantage in the benchmarks above.\n\nAlong with implementing every markdown feature, marked also implements\n[GFM features](http://github.github.com/github-flavored-markdown/).\n\n## Usage\n\n``` js\nvar marked = require('marked');\nconsole.log(marked('i am using __markdown__.'));\n```\n\nYou also have direct access to the lexer and parser if you so desire.\n\n``` js\nvar tokens = marked.lexer(str);\nconsole.log(marked.parser(tokens));\n```\n\n``` bash\n$ node\n> require('marked').lexer('> i am using marked.')\n[ { type: 'blockquote_start' },\n  { type: 'text', text: ' i am using marked.' },\n  { type: 'blockquote_end' },\n  links: {} ]\n```\n\n## CLI\n\n``` bash\n$ marked -o hello.html\nhello world\n^D\n$ cat hello.html\n<p>hello world</p>\n```\n\n## Syntax Highlighting\n\nMarked has an interface that allows for a syntax highlighter to highlight code\nblocks before they're output.\n\nExample implementation:\n\n``` js\nvar highlight = require('my-syntax-highlighter')\n  , marked_ = require('marked');\n\nvar marked = function(text) {\n  var tokens = marked_.lexer(text)\n    , l = tokens.length\n    , i = 0\n    , token;\n\n  for (; i < l; i++) {\n    token = tokens[i];\n    if (token.type === 'code') {\n      token.text = highlight(token.text, token.lang);\n      // marked should not escape this\n      token.escaped = true;\n    }\n  }\n\n  text = marked_.parser(tokens);\n\n  return text;\n};\n\nmodule.exports = marked;\n```\n\n## License\n\nCopyright (c) 2011-2012, Christopher Jeffrey. (MIT License)\n\nSee LICENSE for more info.\n","maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.1.9":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.1.9","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"man":["./man/marked.1"],"preferGlobal":false,"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"homepage":"https://github.com/chjj/marked","bugs":{"name":"http://github.com/chjj/marked/issues"},"keywords":["markdown","markup","html"],"tags":["markdown","markup","html"],"_npmUser":{"name":"chjj","email":"chjjeffrey@gmail.com"},"_id":"marked@0.1.9","dependencies":{},"devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.0-2","_nodeVersion":"v0.6.8","_defaultsLoaded":true,"dist":{"shasum":"ae97d691216db65acf212adfbc5b7d4f16a807be","tarball":"http://registry.npmjs.org/marked/-/marked-0.1.9.tgz"},"readme":"# marked\n\nA full-featured markdown parser and compiler.\nBuilt for speed.\n\n## Benchmarks\n\nnode v0.4.x\n\n``` bash\n$ node test --bench\nmarked completed in 12071ms.\nshowdown (reuse converter) completed in 27387ms.\nshowdown (new converter) completed in 75617ms.\nmarkdown-js completed in 70069ms.\n```\n\nnode v0.6.x\n\n``` bash\n$ node test --bench\nmarked completed in 6485ms.\nmarked (with gfm) completed in 7466ms.\ndiscount completed in 7169ms.\nshowdown (reuse converter) completed in 15937ms.\nshowdown (new converter) completed in 18279ms.\nmarkdown-js completed in 23572ms.\n```\n\n__Marked is now faster than Discount, which is written in C.__\n\nFor those feeling skeptical: These benchmarks run the entire markdown test suite\n1000 times. The test suite tests every feature. It doesn't cater to specific\naspects.\n\nBenchmarks for other engines to come (?).\n\n## Install\n\n``` bash\n$ npm install marked\n```\n\n## Another javascript markdown parser\n\nThe point of marked was to create a markdown compiler where it was possible to\nfrequently parse huge chunks of markdown without having to worry about\ncaching the compiled output somehow...or blocking for an unnecesarily long time.\n\nmarked is very concise and still implements all markdown features. It is also\nnow fully compatible with the client-side.\n\nmarked more or less passes the official markdown test suite in its\nentirety. This is important because a surprising number of markdown compilers\ncannot pass more than a few tests. It was very difficult to get marked as\ncompliant as it is. It could have cut corners in several areas for the sake\nof performance, but did not in order to be exactly what you expect in terms\nof a markdown rendering. In fact, this is why marked could be considered at a\ndisadvantage in the benchmarks above.\n\nAlong with implementing every markdown feature, marked also implements\n[GFM features](http://github.github.com/github-flavored-markdown/).\n\n## Usage\n\n``` js\nvar marked = require('marked');\nconsole.log(marked('i am using __markdown__.'));\n```\n\nYou also have direct access to the lexer and parser if you so desire.\n\n``` js\nvar tokens = marked.lexer(str);\nconsole.log(marked.parser(tokens));\n```\n\n``` bash\n$ node\n> require('marked').lexer('> i am using marked.')\n[ { type: 'blockquote_start' },\n  { type: 'text', text: ' i am using marked.' },\n  { type: 'blockquote_end' },\n  links: {} ]\n```\n\n## CLI\n\n``` bash\n$ marked -o hello.html\nhello world\n^D\n$ cat hello.html\n<p>hello world</p>\n```\n\n## Syntax Highlighting\n\nMarked has an interface that allows for a syntax highlighter to highlight code\nblocks before they're output.\n\nExample implementation:\n\n``` js\nvar highlight = require('my-syntax-highlighter')\n  , marked_ = require('marked');\n\nvar marked = function(text) {\n  var tokens = marked_.lexer(text)\n    , l = tokens.length\n    , i = 0\n    , token;\n\n  for (; i < l; i++) {\n    token = tokens[i];\n    if (token.type === 'code') {\n      token.text = highlight(token.text, token.lang);\n      // marked should not escape this\n      token.escaped = true;\n    }\n  }\n\n  text = marked_.parser(tokens);\n\n  return text;\n};\n\nmodule.exports = marked;\n```\n\n## License\n\nCopyright (c) 2011-2012, Christopher Jeffrey. (MIT License)\n\nSee LICENSE for more info.\n","maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.2.0":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.2.0","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"man":["./man/marked.1"],"preferGlobal":false,"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"homepage":"https://github.com/chjj/marked","bugs":{"url":"http://github.com/chjj/marked/issues"},"keywords":["markdown","markup","html"],"tags":["markdown","markup","html"],"_npmUser":{"name":"chjj","email":"chjjeffrey@gmail.com"},"_id":"marked@0.2.0","dependencies":{},"devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.0-3","_nodeVersion":"v0.6.10","_defaultsLoaded":true,"dist":{"shasum":"4026d8e32aff1a87b07f53a1acf186d208aa2b87","tarball":"http://registry.npmjs.org/marked/-/marked-0.2.0.tgz"},"readme":"# marked\n\nA full-featured markdown parser and compiler.\nBuilt for speed.\n\n## Benchmarks\n\nnode v0.4.x\n\n``` bash\n$ node test --bench\nmarked completed in 12071ms.\nshowdown (reuse converter) completed in 27387ms.\nshowdown (new converter) completed in 75617ms.\nmarkdown-js completed in 70069ms.\n```\n\nnode v0.6.x\n\n``` bash\n$ node test --bench\nmarked completed in 6485ms.\nmarked (with gfm) completed in 7466ms.\ndiscount completed in 7169ms.\nshowdown (reuse converter) completed in 15937ms.\nshowdown (new converter) completed in 18279ms.\nmarkdown-js completed in 23572ms.\n```\n\n__Marked is now faster than Discount, which is written in C.__\n\nFor those feeling skeptical: These benchmarks run the entire markdown test suite\n1000 times. The test suite tests every feature. It doesn't cater to specific\naspects.\n\nBenchmarks for other engines to come (?).\n\n## Install\n\n``` bash\n$ npm install marked\n```\n\n## Another javascript markdown parser\n\nThe point of marked was to create a markdown compiler where it was possible to\nfrequently parse huge chunks of markdown without having to worry about\ncaching the compiled output somehow...or blocking for an unnecesarily long time.\n\nmarked is very concise and still implements all markdown features. It is also\nnow fully compatible with the client-side.\n\nmarked more or less passes the official markdown test suite in its\nentirety. This is important because a surprising number of markdown compilers\ncannot pass more than a few tests. It was very difficult to get marked as\ncompliant as it is. It could have cut corners in several areas for the sake\nof performance, but did not in order to be exactly what you expect in terms\nof a markdown rendering. In fact, this is why marked could be considered at a\ndisadvantage in the benchmarks above.\n\nAlong with implementing every markdown feature, marked also implements\n[GFM features](http://github.github.com/github-flavored-markdown/).\n\n## Usage\n\n``` js\nvar marked = require('marked');\nconsole.log(marked('i am using __markdown__.'));\n```\n\nYou also have direct access to the lexer and parser if you so desire.\n\n``` js\nvar tokens = marked.lexer(str);\nconsole.log(marked.parser(tokens));\n```\n\n``` bash\n$ node\n> require('marked').lexer('> i am using marked.')\n[ { type: 'blockquote_start' },\n  { type: 'text', text: ' i am using marked.' },\n  { type: 'blockquote_end' },\n  links: {} ]\n```\n\n## CLI\n\n``` bash\n$ marked -o hello.html\nhello world\n^D\n$ cat hello.html\n<p>hello world</p>\n```\n\n## Syntax Highlighting\n\nMarked has an interface that allows for a syntax highlighter to highlight code\nblocks before they're output.\n\nExample implementation:\n\n``` js\nvar highlight = require('my-syntax-highlighter')\n  , marked_ = require('marked');\n\nvar marked = function(text) {\n  var tokens = marked_.lexer(text)\n    , l = tokens.length\n    , i = 0\n    , token;\n\n  for (; i < l; i++) {\n    token = tokens[i];\n    if (token.type === 'code') {\n      token.text = highlight(token.text, token.lang);\n      // marked should not escape this\n      token.escaped = true;\n    }\n  }\n\n  text = marked_.parser(tokens);\n\n  return text;\n};\n\nmodule.exports = marked;\n```\n\n## License\n\nCopyright (c) 2011-2012, Christopher Jeffrey. (MIT License)\n\nSee LICENSE for more info.\n","maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.2.1":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.2.1","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"man":["./man/marked.1"],"preferGlobal":false,"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"homepage":"https://github.com/chjj/marked","bugs":{"url":"http://github.com/chjj/marked/issues"},"keywords":["markdown","markup","html"],"tags":["markdown","markup","html"],"_npmUser":{"name":"chjj","email":"chjjeffrey@gmail.com"},"_id":"marked@0.2.1","dependencies":{},"devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.0-3","_nodeVersion":"v0.6.10","_defaultsLoaded":true,"dist":{"shasum":"4573f0c2055a1e261c02057d97230afa7e06281b","tarball":"http://registry.npmjs.org/marked/-/marked-0.2.1.tgz"},"readme":"# marked\n\nA full-featured markdown parser and compiler.\nBuilt for speed.\n\n## Benchmarks\n\nnode v0.4.x\n\n``` bash\n$ node test --bench\nmarked completed in 12071ms.\nshowdown (reuse converter) completed in 27387ms.\nshowdown (new converter) completed in 75617ms.\nmarkdown-js completed in 70069ms.\n```\n\nnode v0.6.x\n\n``` bash\n$ node test --bench\nmarked completed in 6448ms.\nmarked (gfm) completed in 7357ms.\nmarked (pedantic) completed in 6092ms.\ndiscount completed in 7314ms.\nshowdown (reuse converter) completed in 16018ms.\nshowdown (new converter) completed in 18234ms.\nmarkdown-js completed in 24270ms.\n```\n\n__Marked is now faster than Discount, which is written in C.__\n\nFor those feeling skeptical: These benchmarks run the entire markdown test suite\n1000 times. The test suite tests every feature. It doesn't cater to specific\naspects.\n\nBenchmarks for other engines to come (?).\n\n## Install\n\n``` bash\n$ npm install marked\n```\n\n## Another javascript markdown parser\n\nThe point of marked was to create a markdown compiler where it was possible to\nfrequently parse huge chunks of markdown without having to worry about\ncaching the compiled output somehow...or blocking for an unnecesarily long time.\n\nmarked is very concise and still implements all markdown features. It is also\nnow fully compatible with the client-side.\n\nmarked more or less passes the official markdown test suite in its\nentirety. This is important because a surprising number of markdown compilers\ncannot pass more than a few tests. It was very difficult to get marked as\ncompliant as it is. It could have cut corners in several areas for the sake\nof performance, but did not in order to be exactly what you expect in terms\nof a markdown rendering. In fact, this is why marked could be considered at a\ndisadvantage in the benchmarks above.\n\nAlong with implementing every markdown feature, marked also implements\n[GFM features](http://github.github.com/github-flavored-markdown/).\n\n## Options\n\nmarked has 3 different switches which change behavior.\n\n- __pedantic__: Conform to obscure parts of `markdown.pl` as much as possible.\n  Don't fix any of the original markdown bugs or poor behavior.\n- __gfm__: Enabled github flavored markdown (default for backward compatibility).\n- __sanitize__: Sanitize the output. Ignore any HTML that has been input.\n\nNone of the above are mutually exclusive/inclusive.\n\n## Usage\n\n``` js\n// set default options\nmarked.setOptions({\n  gfm: true,\n  pedantic: false,\n  sanitize: true\n});\nconsole.log(marked('i am using __markdown__.'));\n```\n\nYou also have direct access to the lexer and parser if you so desire.\n\n``` js\nvar tokens = marked.lexer(str);\nconsole.log(marked.parser(tokens));\n```\n\n``` bash\n$ node\n> require('marked').lexer('> i am using marked.')\n[ { type: 'blockquote_start' },\n  { type: 'text', text: ' i am using marked.' },\n  { type: 'blockquote_end' },\n  links: {} ]\n```\n\n## CLI\n\n``` bash\n$ marked -o hello.html\nhello world\n^D\n$ cat hello.html\n<p>hello world</p>\n```\n\n## Syntax Highlighting\n\nMarked has an interface that allows for a syntax highlighter to highlight code\nblocks before they're output.\n\nExample implementation:\n\n``` js\nvar highlight = require('my-syntax-highlighter')\n  , marked_ = require('marked');\n\nvar marked = function(text) {\n  var tokens = marked_.lexer(text)\n    , l = tokens.length\n    , i = 0\n    , token;\n\n  for (; i < l; i++) {\n    token = tokens[i];\n    if (token.type === 'code') {\n      token.text = highlight(token.text, token.lang);\n      // marked should not escape this\n      token.escaped = true;\n    }\n  }\n\n  text = marked_.parser(tokens);\n\n  return text;\n};\n\nmodule.exports = marked;\n```\n\n## License\n\nCopyright (c) 2011-2012, Christopher Jeffrey. (MIT License)\n\nSee LICENSE for more info.\n","maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.2.2":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.2.2","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"man":["./man/marked.1"],"preferGlobal":false,"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"homepage":"https://github.com/chjj/marked","bugs":{"url":"http://github.com/chjj/marked/issues"},"keywords":["markdown","markup","html"],"tags":["markdown","markup","html"],"_npmUser":{"name":"chjj","email":"chjjeffrey@gmail.com"},"_id":"marked@0.2.2","dependencies":{},"devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.4","_nodeVersion":"v0.6.12","_defaultsLoaded":true,"dist":{"shasum":"1f365673a509e85499923c4f48200b962477ac4f","tarball":"http://registry.npmjs.org/marked/-/marked-0.2.2.tgz"},"readme":"# marked\n\nA full-featured markdown parser and compiler.\nBuilt for speed.\n\n## Benchmarks\n\nnode v0.4.x\n\n``` bash\n$ node test --bench\nmarked completed in 12071ms.\nshowdown (reuse converter) completed in 27387ms.\nshowdown (new converter) completed in 75617ms.\nmarkdown-js completed in 70069ms.\n```\n\nnode v0.6.x\n\n``` bash\n$ node test --bench\nmarked completed in 6448ms.\nmarked (gfm) completed in 7357ms.\nmarked (pedantic) completed in 6092ms.\ndiscount completed in 7314ms.\nshowdown (reuse converter) completed in 16018ms.\nshowdown (new converter) completed in 18234ms.\nmarkdown-js completed in 24270ms.\n```\n\n__Marked is now faster than Discount, which is written in C.__\n\nFor those feeling skeptical: These benchmarks run the entire markdown test suite\n1000 times. The test suite tests every feature. It doesn't cater to specific\naspects.\n\nBenchmarks for other engines to come (?).\n\n## Install\n\n``` bash\n$ npm install marked\n```\n\n## Another javascript markdown parser\n\nThe point of marked was to create a markdown compiler where it was possible to\nfrequently parse huge chunks of markdown without having to worry about\ncaching the compiled output somehow...or blocking for an unnecesarily long time.\n\nmarked is very concise and still implements all markdown features. It is also\nnow fully compatible with the client-side.\n\nmarked more or less passes the official markdown test suite in its\nentirety. This is important because a surprising number of markdown compilers\ncannot pass more than a few tests. It was very difficult to get marked as\ncompliant as it is. It could have cut corners in several areas for the sake\nof performance, but did not in order to be exactly what you expect in terms\nof a markdown rendering. In fact, this is why marked could be considered at a\ndisadvantage in the benchmarks above.\n\nAlong with implementing every markdown feature, marked also implements\n[GFM features](http://github.github.com/github-flavored-markdown/).\n\n## Options\n\nmarked has 3 different switches which change behavior.\n\n- __pedantic__: Conform to obscure parts of `markdown.pl` as much as possible.\n  Don't fix any of the original markdown bugs or poor behavior.\n- __gfm__: Enabled github flavored markdown (default for backward compatibility).\n- __sanitize__: Sanitize the output. Ignore any HTML that has been input.\n\nNone of the above are mutually exclusive/inclusive.\n\n## Usage\n\n``` js\n// set default options\nmarked.setOptions({\n  gfm: true,\n  pedantic: false,\n  sanitize: true\n});\nconsole.log(marked('i am using __markdown__.'));\n```\n\nYou also have direct access to the lexer and parser if you so desire.\n\n``` js\nvar tokens = marked.lexer(str);\nconsole.log(marked.parser(tokens));\n```\n\n``` bash\n$ node\n> require('marked').lexer('> i am using marked.')\n[ { type: 'blockquote_start' },\n  { type: 'text', text: ' i am using marked.' },\n  { type: 'blockquote_end' },\n  links: {} ]\n```\n\n## CLI\n\n``` bash\n$ marked -o hello.html\nhello world\n^D\n$ cat hello.html\n<p>hello world</p>\n```\n\n## Syntax Highlighting\n\nMarked has an interface that allows for a syntax highlighter to highlight code\nblocks before they're output.\n\nExample implementation:\n\n``` js\nvar highlight = require('my-syntax-highlighter')\n  , marked_ = require('marked');\n\nvar marked = function(text) {\n  var tokens = marked_.lexer(text)\n    , l = tokens.length\n    , i = 0\n    , token;\n\n  for (; i < l; i++) {\n    token = tokens[i];\n    if (token.type === 'code') {\n      token.text = highlight(token.text, token.lang);\n      // marked should not escape this\n      token.escaped = true;\n    }\n  }\n\n  text = marked_.parser(tokens);\n\n  return text;\n};\n\nmodule.exports = marked;\n```\n\n## License\n\nCopyright (c) 2011-2012, Christopher Jeffrey. (MIT License)\n\nSee LICENSE for more info.\n","maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.2.2-1":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.2.2-1","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"man":["./man/marked.1"],"preferGlobal":false,"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"homepage":"https://github.com/chjj/marked","bugs":{"url":"http://github.com/chjj/marked/issues"},"keywords":["markdown","markup","html"],"tags":["markdown","markup","html"],"_npmUser":{"name":"chjj","email":"chjjeffrey@gmail.com"},"_id":"marked@0.2.2-1","dependencies":{},"devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.4","_nodeVersion":"v0.6.12","_defaultsLoaded":true,"dist":{"shasum":"5dfc133af25e0ebadcd5d05ea26904ec400c5ebe","tarball":"http://registry.npmjs.org/marked/-/marked-0.2.2-1.tgz"},"readme":"# marked\n\nA full-featured markdown parser and compiler.\nBuilt for speed.\n\n## Benchmarks\n\nnode v0.4.x\n\n``` bash\n$ node test --bench\nmarked completed in 12071ms.\nshowdown (reuse converter) completed in 27387ms.\nshowdown (new converter) completed in 75617ms.\nmarkdown-js completed in 70069ms.\n```\n\nnode v0.6.x\n\n``` bash\n$ node test --bench\nmarked completed in 6448ms.\nmarked (gfm) completed in 7357ms.\nmarked (pedantic) completed in 6092ms.\ndiscount completed in 7314ms.\nshowdown (reuse converter) completed in 16018ms.\nshowdown (new converter) completed in 18234ms.\nmarkdown-js completed in 24270ms.\n```\n\n__Marked is now faster than Discount, which is written in C.__\n\nFor those feeling skeptical: These benchmarks run the entire markdown test suite\n1000 times. The test suite tests every feature. It doesn't cater to specific\naspects.\n\nBenchmarks for other engines to come (?).\n\n## Install\n\n``` bash\n$ npm install marked\n```\n\n## Another javascript markdown parser\n\nThe point of marked was to create a markdown compiler where it was possible to\nfrequently parse huge chunks of markdown without having to worry about\ncaching the compiled output somehow...or blocking for an unnecesarily long time.\n\nmarked is very concise and still implements all markdown features. It is also\nnow fully compatible with the client-side.\n\nmarked more or less passes the official markdown test suite in its\nentirety. This is important because a surprising number of markdown compilers\ncannot pass more than a few tests. It was very difficult to get marked as\ncompliant as it is. It could have cut corners in several areas for the sake\nof performance, but did not in order to be exactly what you expect in terms\nof a markdown rendering. In fact, this is why marked could be considered at a\ndisadvantage in the benchmarks above.\n\nAlong with implementing every markdown feature, marked also implements\n[GFM features](http://github.github.com/github-flavored-markdown/).\n\n## Options\n\nmarked has 3 different switches which change behavior.\n\n- __pedantic__: Conform to obscure parts of `markdown.pl` as much as possible.\n  Don't fix any of the original markdown bugs or poor behavior.\n- __gfm__: Enabled github flavored markdown (default for backward compatibility).\n- __sanitize__: Sanitize the output. Ignore any HTML that has been input.\n\nNone of the above are mutually exclusive/inclusive.\n\n## Usage\n\n``` js\n// set default options\nmarked.setOptions({\n  gfm: true,\n  pedantic: false,\n  sanitize: true\n});\nconsole.log(marked('i am using __markdown__.'));\n```\n\nYou also have direct access to the lexer and parser if you so desire.\n\n``` js\nvar tokens = marked.lexer(str);\nconsole.log(marked.parser(tokens));\n```\n\n``` bash\n$ node\n> require('marked').lexer('> i am using marked.')\n[ { type: 'blockquote_start' },\n  { type: 'text', text: ' i am using marked.' },\n  { type: 'blockquote_end' },\n  links: {} ]\n```\n\n## CLI\n\n``` bash\n$ marked -o hello.html\nhello world\n^D\n$ cat hello.html\n<p>hello world</p>\n```\n\n## Syntax Highlighting\n\nMarked has an interface that allows for a syntax highlighter to highlight code\nblocks before they're output.\n\nExample implementation:\n\n``` js\nvar highlight = require('my-syntax-highlighter')\n  , marked_ = require('marked');\n\nvar marked = function(text) {\n  var tokens = marked_.lexer(text)\n    , l = tokens.length\n    , i = 0\n    , token;\n\n  for (; i < l; i++) {\n    token = tokens[i];\n    if (token.type === 'code') {\n      token.text = highlight(token.text, token.lang);\n      // marked should not escape this\n      token.escaped = true;\n    }\n  }\n\n  text = marked_.parser(tokens);\n\n  return text;\n};\n\nmodule.exports = marked;\n```\n\n## License\n\nCopyright (c) 2011-2012, Christopher Jeffrey. (MIT License)\n\nSee LICENSE for more info.\n","maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.2.3":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.2.3","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"man":["./man/marked.1"],"preferGlobal":false,"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"homepage":"https://github.com/chjj/marked","bugs":{"url":"http://github.com/chjj/marked/issues"},"keywords":["markdown","markup","html"],"tags":["markdown","markup","html"],"_npmUser":{"name":"chjj","email":"chjjeffrey@gmail.com"},"_id":"marked@0.2.3","dependencies":{},"devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.4","_nodeVersion":"v0.6.12","_defaultsLoaded":true,"dist":{"shasum":"7d641007ecdc959718dfce9709ce843621ea37cf","tarball":"http://registry.npmjs.org/marked/-/marked-0.2.3.tgz"},"readme":"# marked\n\nA full-featured markdown parser and compiler.\nBuilt for speed.\n\n## Benchmarks\n\nnode v0.4.x\n\n``` bash\n$ node test --bench\nmarked completed in 12071ms.\nshowdown (reuse converter) completed in 27387ms.\nshowdown (new converter) completed in 75617ms.\nmarkdown-js completed in 70069ms.\n```\n\nnode v0.6.x\n\n``` bash\n$ node test --bench\nmarked completed in 6448ms.\nmarked (gfm) completed in 7357ms.\nmarked (pedantic) completed in 6092ms.\ndiscount completed in 7314ms.\nshowdown (reuse converter) completed in 16018ms.\nshowdown (new converter) completed in 18234ms.\nmarkdown-js completed in 24270ms.\n```\n\n__Marked is now faster than Discount, which is written in C.__\n\nFor those feeling skeptical: These benchmarks run the entire markdown test suite\n1000 times. The test suite tests every feature. It doesn't cater to specific\naspects.\n\nBenchmarks for other engines to come (?).\n\n## Install\n\n``` bash\n$ npm install marked\n```\n\n## Another javascript markdown parser\n\nThe point of marked was to create a markdown compiler where it was possible to\nfrequently parse huge chunks of markdown without having to worry about\ncaching the compiled output somehow...or blocking for an unnecesarily long time.\n\nmarked is very concise and still implements all markdown features. It is also\nnow fully compatible with the client-side.\n\nmarked more or less passes the official markdown test suite in its\nentirety. This is important because a surprising number of markdown compilers\ncannot pass more than a few tests. It was very difficult to get marked as\ncompliant as it is. It could have cut corners in several areas for the sake\nof performance, but did not in order to be exactly what you expect in terms\nof a markdown rendering. In fact, this is why marked could be considered at a\ndisadvantage in the benchmarks above.\n\nAlong with implementing every markdown feature, marked also implements\n[GFM features](http://github.github.com/github-flavored-markdown/).\n\n## Options\n\nmarked has 3 different switches which change behavior.\n\n- __pedantic__: Conform to obscure parts of `markdown.pl` as much as possible.\n  Don't fix any of the original markdown bugs or poor behavior.\n- __gfm__: Enabled github flavored markdown (default for backward compatibility).\n- __sanitize__: Sanitize the output. Ignore any HTML that has been input.\n\nNone of the above are mutually exclusive/inclusive.\n\n## Usage\n\n``` js\n// set default options\nmarked.setOptions({\n  gfm: true,\n  pedantic: false,\n  sanitize: true\n});\nconsole.log(marked('i am using __markdown__.'));\n```\n\nYou also have direct access to the lexer and parser if you so desire.\n\n``` js\nvar tokens = marked.lexer(str);\nconsole.log(marked.parser(tokens));\n```\n\n``` bash\n$ node\n> require('marked').lexer('> i am using marked.')\n[ { type: 'blockquote_start' },\n  { type: 'text', text: ' i am using marked.' },\n  { type: 'blockquote_end' },\n  links: {} ]\n```\n\n## CLI\n\n``` bash\n$ marked -o hello.html\nhello world\n^D\n$ cat hello.html\n<p>hello world</p>\n```\n\n## Syntax Highlighting\n\nMarked has an interface that allows for a syntax highlighter to highlight code\nblocks before they're output.\n\nExample implementation:\n\n``` js\nvar highlight = require('my-syntax-highlighter')\n  , marked_ = require('marked');\n\nvar marked = function(text) {\n  var tokens = marked_.lexer(text)\n    , l = tokens.length\n    , i = 0\n    , token;\n\n  for (; i < l; i++) {\n    token = tokens[i];\n    if (token.type === 'code') {\n      token.text = highlight(token.text, token.lang);\n      // marked should not escape this\n      token.escaped = true;\n    }\n  }\n\n  text = marked_.parser(tokens);\n\n  return text;\n};\n\nmodule.exports = marked;\n```\n\n## License\n\nCopyright (c) 2011-2012, Christopher Jeffrey. (MIT License)\n\nSee LICENSE for more info.\n","maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.2.4":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.2.4","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"man":["./man/marked.1"],"preferGlobal":false,"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"homepage":"https://github.com/chjj/marked","bugs":{"url":"http://github.com/chjj/marked/issues"},"keywords":["markdown","markup","html"],"tags":["markdown","markup","html"],"_npmUser":{"name":"chjj","email":"chjjeffrey@gmail.com"},"_id":"marked@0.2.4","dependencies":{},"devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.9","_nodeVersion":"v0.6.13","_defaultsLoaded":true,"dist":{"shasum":"2322a565936c33b2fdac6692197903ba645a2a91","tarball":"http://registry.npmjs.org/marked/-/marked-0.2.4.tgz"},"readme":"# marked\n\nA full-featured markdown parser and compiler, written in javascript.\nBuilt for speed.\n\n## Benchmarks\n\nnode v0.4.x\n\n``` bash\n$ node test --bench\nmarked completed in 12071ms.\nshowdown (reuse converter) completed in 27387ms.\nshowdown (new converter) completed in 75617ms.\nmarkdown-js completed in 70069ms.\n```\n\nnode v0.6.x\n\n``` bash\n$ node test --bench\nmarked completed in 6448ms.\nmarked (gfm) completed in 7357ms.\nmarked (pedantic) completed in 6092ms.\ndiscount completed in 7314ms.\nshowdown (reuse converter) completed in 16018ms.\nshowdown (new converter) completed in 18234ms.\nmarkdown-js completed in 24270ms.\n```\n\n__Marked is now faster than Discount, which is written in C.__\n\nFor those feeling skeptical: These benchmarks run the entire markdown test suite\n1000 times. The test suite tests every feature. It doesn't cater to specific\naspects.\n\n## Install\n\n``` bash\n$ npm install marked\n```\n\n## Another Javascript Markdown Parser\n\nThe point of marked was to create a markdown compiler where it was possible to\nfrequently parse huge chunks of markdown without having to worry about\ncaching the compiled output somehow...or blocking for an unnecesarily long time.\n\nmarked is very concise and still implements all markdown features. It is also\nnow fully compatible with the client-side.\n\nmarked more or less passes the official markdown test suite in its\nentirety. This is important because a surprising number of markdown compilers\ncannot pass more than a few tests. It was very difficult to get marked as\ncompliant as it is. It could have cut corners in several areas for the sake\nof performance, but did not in order to be exactly what you expect in terms\nof a markdown rendering. In fact, this is why marked could be considered at a\ndisadvantage in the benchmarks above.\n\nAlong with implementing every markdown feature, marked also implements\n[GFM features](http://github.github.com/github-flavored-markdown/).\n\n## Options\n\nmarked has 4 different switches which change behavior.\n\n- __pedantic__: Conform to obscure parts of `markdown.pl` as much as possible.\n  Don't fix any of the original markdown bugs or poor behavior.\n- __gfm__: Enable github flavored markdown (enabled by default).\n- __sanitize__: Sanitize the output. Ignore any HTML that has been input.\n- __highlight__: A callback to highlight code blocks.\n\nNone of the above are mutually exclusive/inclusive.\n\n## Usage\n\n``` js\n// Set default options\nmarked.setOptions({\n  gfm: true,\n  pedantic: false,\n  sanitize: true,\n  // callback for code highlighter\n  highlight: function(code, lang) {\n    if (lang === 'js') {\n      return javascriptHighlighter(code);\n    }\n    return code;\n  }\n});\nconsole.log(marked('i am using __markdown__.'));\n```\n\nYou also have direct access to the lexer and parser if you so desire.\n\n``` js\nvar tokens = marked.lexer(text);\nconsole.log(marked.parser(tokens));\n```\n\n``` bash\n$ node\n> require('marked').lexer('> i am using marked.')\n[ { type: 'blockquote_start' },\n  { type: 'paragraph',\n    text: 'i am using marked.' },\n  { type: 'blockquote_end' },\n  links: {} ]\n```\n\n## CLI\n\n``` bash\n$ marked -o hello.html\nhello world\n^D\n$ cat hello.html\n<p>hello world</p>\n```\n\n## License\n\nCopyright (c) 2011-2012, Christopher Jeffrey. (MIT License)\n\nSee LICENSE for more info.\n","maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.2.4-1":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.2.4-1","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"man":["./man/marked.1"],"preferGlobal":false,"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"homepage":"https://github.com/chjj/marked","bugs":{"url":"http://github.com/chjj/marked/issues"},"keywords":["markdown","markup","html"],"tags":["markdown","markup","html"],"_npmUser":{"name":"chjj","email":"chjjeffrey@gmail.com"},"_id":"marked@0.2.4-1","dependencies":{},"devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.9","_nodeVersion":"v0.6.13","_defaultsLoaded":true,"dist":{"shasum":"6556d6101a50e2cd444557ba2a3eb0a312b1316b","tarball":"http://registry.npmjs.org/marked/-/marked-0.2.4-1.tgz"},"readme":"# marked\n\nA full-featured markdown parser and compiler, written in javascript.\nBuilt for speed.\n\n## Benchmarks\n\nnode v0.4.x\n\n``` bash\n$ node test --bench\nmarked completed in 12071ms.\nshowdown (reuse converter) completed in 27387ms.\nshowdown (new converter) completed in 75617ms.\nmarkdown-js completed in 70069ms.\n```\n\nnode v0.6.x\n\n``` bash\n$ node test --bench\nmarked completed in 6448ms.\nmarked (gfm) completed in 7357ms.\nmarked (pedantic) completed in 6092ms.\ndiscount completed in 7314ms.\nshowdown (reuse converter) completed in 16018ms.\nshowdown (new converter) completed in 18234ms.\nmarkdown-js completed in 24270ms.\n```\n\n__Marked is now faster than Discount, which is written in C.__\n\nFor those feeling skeptical: These benchmarks run the entire markdown test suite\n1000 times. The test suite tests every feature. It doesn't cater to specific\naspects.\n\n## Install\n\n``` bash\n$ npm install marked\n```\n\n## Another Javascript Markdown Parser\n\nThe point of marked was to create a markdown compiler where it was possible to\nfrequently parse huge chunks of markdown without having to worry about\ncaching the compiled output somehow...or blocking for an unnecesarily long time.\n\nmarked is very concise and still implements all markdown features. It is also\nnow fully compatible with the client-side.\n\nmarked more or less passes the official markdown test suite in its\nentirety. This is important because a surprising number of markdown compilers\ncannot pass more than a few tests. It was very difficult to get marked as\ncompliant as it is. It could have cut corners in several areas for the sake\nof performance, but did not in order to be exactly what you expect in terms\nof a markdown rendering. In fact, this is why marked could be considered at a\ndisadvantage in the benchmarks above.\n\nAlong with implementing every markdown feature, marked also implements\n[GFM features](http://github.github.com/github-flavored-markdown/).\n\n## Options\n\nmarked has 4 different switches which change behavior.\n\n- __pedantic__: Conform to obscure parts of `markdown.pl` as much as possible.\n  Don't fix any of the original markdown bugs or poor behavior.\n- __gfm__: Enable github flavored markdown (enabled by default).\n- __sanitize__: Sanitize the output. Ignore any HTML that has been input.\n- __highlight__: A callback to highlight code blocks.\n\nNone of the above are mutually exclusive/inclusive.\n\n## Usage\n\n``` js\n// Set default options\nmarked.setOptions({\n  gfm: true,\n  pedantic: false,\n  sanitize: true,\n  // callback for code highlighter\n  highlight: function(code, lang) {\n    if (lang === 'js') {\n      return javascriptHighlighter(code);\n    }\n    return code;\n  }\n});\nconsole.log(marked('i am using __markdown__.'));\n```\n\nYou also have direct access to the lexer and parser if you so desire.\n\n``` js\nvar tokens = marked.lexer(text);\nconsole.log(marked.parser(tokens));\n```\n\n``` bash\n$ node\n> require('marked').lexer('> i am using marked.')\n[ { type: 'blockquote_start' },\n  { type: 'paragraph',\n    text: 'i am using marked.' },\n  { type: 'blockquote_end' },\n  links: {} ]\n```\n\n## CLI\n\n``` bash\n$ marked -o hello.html\nhello world\n^D\n$ cat hello.html\n<p>hello world</p>\n```\n\n## License\n\nCopyright (c) 2011-2012, Christopher Jeffrey. (MIT License)\n\nSee LICENSE for more info.\n","maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.2.5":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.2.5","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"man":["./man/marked.1"],"preferGlobal":false,"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"homepage":"https://github.com/chjj/marked","bugs":{"url":"http://github.com/chjj/marked/issues"},"keywords":["markdown","markup","html"],"tags":["markdown","markup","html"],"_npmUser":{"name":"chjj","email":"chjjeffrey@gmail.com"},"_id":"marked@0.2.5","dependencies":{},"devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.18","_nodeVersion":"v0.6.16","_defaultsLoaded":true,"dist":{"shasum":"962848adf206e1843557b1d1405cae4800cbb7ef","tarball":"http://registry.npmjs.org/marked/-/marked-0.2.5.tgz"},"readme":"# marked\n\nA full-featured markdown parser and compiler, written in javascript.\nBuilt for speed.\n\n## Benchmarks\n\nnode v0.4.x\n\n``` bash\n$ node test --bench\nmarked completed in 12071ms.\nshowdown (reuse converter) completed in 27387ms.\nshowdown (new converter) completed in 75617ms.\nmarkdown-js completed in 70069ms.\n```\n\nnode v0.6.x\n\n``` bash\n$ node test --bench\nmarked completed in 6448ms.\nmarked (gfm) completed in 7357ms.\nmarked (pedantic) completed in 6092ms.\ndiscount completed in 7314ms.\nshowdown (reuse converter) completed in 16018ms.\nshowdown (new converter) completed in 18234ms.\nmarkdown-js completed in 24270ms.\n```\n\n__Marked is now faster than Discount, which is written in C.__\n\nFor those feeling skeptical: These benchmarks run the entire markdown test suite\n1000 times. The test suite tests every feature. It doesn't cater to specific\naspects.\n\n## Install\n\n``` bash\n$ npm install marked\n```\n\n## Another Javascript Markdown Parser\n\nThe point of marked was to create a markdown compiler where it was possible to\nfrequently parse huge chunks of markdown without having to worry about\ncaching the compiled output somehow...or blocking for an unnecesarily long time.\n\nmarked is very concise and still implements all markdown features. It is also\nnow fully compatible with the client-side.\n\nmarked more or less passes the official markdown test suite in its\nentirety. This is important because a surprising number of markdown compilers\ncannot pass more than a few tests. It was very difficult to get marked as\ncompliant as it is. It could have cut corners in several areas for the sake\nof performance, but did not in order to be exactly what you expect in terms\nof a markdown rendering. In fact, this is why marked could be considered at a\ndisadvantage in the benchmarks above.\n\nAlong with implementing every markdown feature, marked also implements\n[GFM features](http://github.github.com/github-flavored-markdown/).\n\n## Options\n\nmarked has 4 different switches which change behavior.\n\n- __pedantic__: Conform to obscure parts of `markdown.pl` as much as possible.\n  Don't fix any of the original markdown bugs or poor behavior.\n- __gfm__: Enable github flavored markdown (enabled by default).\n- __sanitize__: Sanitize the output. Ignore any HTML that has been input.\n- __highlight__: A callback to highlight code blocks.\n\nNone of the above are mutually exclusive/inclusive.\n\n## Usage\n\n``` js\n// Set default options\nmarked.setOptions({\n  gfm: true,\n  pedantic: false,\n  sanitize: true,\n  // callback for code highlighter\n  highlight: function(code, lang) {\n    if (lang === 'js') {\n      return javascriptHighlighter(code);\n    }\n    return code;\n  }\n});\nconsole.log(marked('i am using __markdown__.'));\n```\n\nYou also have direct access to the lexer and parser if you so desire.\n\n``` js\nvar tokens = marked.lexer(text);\nconsole.log(marked.parser(tokens));\n```\n\n``` bash\n$ node\n> require('marked').lexer('> i am using marked.')\n[ { type: 'blockquote_start' },\n  { type: 'paragraph',\n    text: 'i am using marked.' },\n  { type: 'blockquote_end' },\n  links: {} ]\n```\n\n## CLI\n\n``` bash\n$ marked -o hello.html\nhello world\n^D\n$ cat hello.html\n<p>hello world</p>\n```\n\n## License\n\nCopyright (c) 2011-2012, Christopher Jeffrey. (MIT License)\n\nSee LICENSE for more info.\n","maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.2.6":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.2.6","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"man":["./man/marked.1"],"preferGlobal":false,"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"homepage":"https://github.com/chjj/marked","bugs":{"url":"http://github.com/chjj/marked/issues"},"keywords":["markdown","markup","html"],"tags":["markdown","markup","html"],"scripts":{"test":"node test","bench":"node test --bench"},"readme":"# marked\n\nA full-featured markdown parser and compiler, written in javascript.\nBuilt for speed.\n\n## Benchmarks\n\nnode v0.4.x\n\n``` bash\n$ node test --bench\nmarked completed in 12071ms.\nshowdown (reuse converter) completed in 27387ms.\nshowdown (new converter) completed in 75617ms.\nmarkdown-js completed in 70069ms.\n```\n\nnode v0.6.x\n\n``` bash\n$ node test --bench\nmarked completed in 6448ms.\nmarked (gfm) completed in 7357ms.\nmarked (pedantic) completed in 6092ms.\ndiscount completed in 7314ms.\nshowdown (reuse converter) completed in 16018ms.\nshowdown (new converter) completed in 18234ms.\nmarkdown-js completed in 24270ms.\n```\n\n__Marked is now faster than Discount, which is written in C.__\n\nFor those feeling skeptical: These benchmarks run the entire markdown test suite\n1000 times. The test suite tests every feature. It doesn't cater to specific\naspects.\n\n## Install\n\n``` bash\n$ npm install marked\n```\n\n## Another Javascript Markdown Parser\n\nThe point of marked was to create a markdown compiler where it was possible to\nfrequently parse huge chunks of markdown without having to worry about\ncaching the compiled output somehow...or blocking for an unnecesarily long time.\n\nmarked is very concise and still implements all markdown features. It is also\nnow fully compatible with the client-side.\n\nmarked more or less passes the official markdown test suite in its\nentirety. This is important because a surprising number of markdown compilers\ncannot pass more than a few tests. It was very difficult to get marked as\ncompliant as it is. It could have cut corners in several areas for the sake\nof performance, but did not in order to be exactly what you expect in terms\nof a markdown rendering. In fact, this is why marked could be considered at a\ndisadvantage in the benchmarks above.\n\nAlong with implementing every markdown feature, marked also implements\n[GFM features](http://github.github.com/github-flavored-markdown/).\n\n## Options\n\nmarked has 4 different switches which change behavior.\n\n- __pedantic__: Conform to obscure parts of `markdown.pl` as much as possible.\n  Don't fix any of the original markdown bugs or poor behavior.\n- __gfm__: Enable github flavored markdown (enabled by default).\n- __sanitize__: Sanitize the output. Ignore any HTML that has been input.\n- __highlight__: A callback to highlight code blocks.\n\nNone of the above are mutually exclusive/inclusive.\n\n## Usage\n\n``` js\n// Set default options\nmarked.setOptions({\n  gfm: true,\n  pedantic: false,\n  sanitize: true,\n  // callback for code highlighter\n  highlight: function(code, lang) {\n    if (lang === 'js') {\n      return javascriptHighlighter(code);\n    }\n    return code;\n  }\n});\nconsole.log(marked('i am using __markdown__.'));\n```\n\nYou also have direct access to the lexer and parser if you so desire.\n\n``` js\nvar tokens = marked.lexer(text);\nconsole.log(marked.parser(tokens));\n```\n\n``` bash\n$ node\n> require('marked').lexer('> i am using marked.')\n[ { type: 'blockquote_start' },\n  { type: 'paragraph',\n    text: 'i am using marked.' },\n  { type: 'blockquote_end' },\n  links: {} ]\n```\n\n## CLI\n\n``` bash\n$ marked -o hello.html\nhello world\n^D\n$ cat hello.html\n<p>hello world</p>\n```\n\n## License\n\nCopyright (c) 2011-2012, Christopher Jeffrey. (MIT License)\n\nSee LICENSE for more info.\n","readmeFilename":"README.md","_id":"marked@0.2.6","dist":{"shasum":"eb37a74110ca7f575af35d92d2598c9bc3b212ee","tarball":"http://registry.npmjs.org/marked/-/marked-0.2.6.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"chjj","email":"chjjeffrey@gmail.com"},"maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.2.7":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.2.7","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"man":["./man/marked.1"],"preferGlobal":true,"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"homepage":"https://github.com/chjj/marked","bugs":{"url":"http://github.com/chjj/marked/issues"},"keywords":["markdown","markup","html"],"tags":["markdown","markup","html"],"scripts":{"test":"node test","bench":"node test --bench"},"readme":"# marked\n\nA full-featured markdown parser and compiler, written in javascript.\nBuilt for speed.\n\n## Benchmarks\n\nnode v0.4.x\n\n``` bash\n$ node test --bench\nmarked completed in 12071ms.\nshowdown (reuse converter) completed in 27387ms.\nshowdown (new converter) completed in 75617ms.\nmarkdown-js completed in 70069ms.\n```\n\nnode v0.6.x\n\n``` bash\n$ node test --bench\nmarked completed in 6448ms.\nmarked (gfm) completed in 7357ms.\nmarked (pedantic) completed in 6092ms.\ndiscount completed in 7314ms.\nshowdown (reuse converter) completed in 16018ms.\nshowdown (new converter) completed in 18234ms.\nmarkdown-js completed in 24270ms.\n```\n\n__Marked is now faster than Discount, which is written in C.__\n\nFor those feeling skeptical: These benchmarks run the entire markdown test suite\n1000 times. The test suite tests every feature. It doesn't cater to specific\naspects.\n\n## Install\n\n``` bash\n$ npm install marked\n```\n\n## Another Javascript Markdown Parser\n\nThe point of marked was to create a markdown compiler where it was possible to\nfrequently parse huge chunks of markdown without having to worry about\ncaching the compiled output somehow...or blocking for an unnecesarily long time.\n\nmarked is very concise and still implements all markdown features. It is also\nnow fully compatible with the client-side.\n\nmarked more or less passes the official markdown test suite in its\nentirety. This is important because a surprising number of markdown compilers\ncannot pass more than a few tests. It was very difficult to get marked as\ncompliant as it is. It could have cut corners in several areas for the sake\nof performance, but did not in order to be exactly what you expect in terms\nof a markdown rendering. In fact, this is why marked could be considered at a\ndisadvantage in the benchmarks above.\n\nAlong with implementing every markdown feature, marked also implements\n[GFM features](http://github.github.com/github-flavored-markdown/).\n\n## Options\n\nmarked has a few different switches which change behavior.\n\n- __pedantic__: Conform to obscure parts of `markdown.pl` as much as possible.\n  Don't fix any of the original markdown bugs or poor behavior.\n- __gfm__: Enable github flavored markdown (enabled by default).\n- __sanitize__: Sanitize the output. Ignore any HTML that has been input.\n- __highlight__: A callback to highlight code blocks.\n- __tables__: Enable GFM tables. This is enabled by default. (Requires the\n  `gfm` option in order to be enabled).\n- __breaks__: Enable GFM line breaks. Disabled by default.\n\n## Usage\n\n``` js\n// Set default options\nmarked.setOptions({\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: true,\n  highlight: function(code, lang) {\n    if (lang === 'js') {\n      return highlighter.javascript(code);\n    }\n    return code;\n  }\n});\nconsole.log(marked('i am using __markdown__.'));\n```\n\nYou also have direct access to the lexer and parser if you so desire.\n\n``` js\nvar tokens = marked.lexer(text, options);\nconsole.log(marked.parser(tokens));\n```\n\n``` js\nvar lexer = new marked.Lexer(options);\nvar tokens = lexer.lex(text);\nconsole.log(tokens);\nconsole.log(lexer.rules);\n```\n\n``` bash\n$ node\n> require('marked').lexer('> i am using marked.')\n[ { type: 'blockquote_start' },\n  { type: 'paragraph',\n    text: 'i am using marked.' },\n  { type: 'blockquote_end' },\n  links: {} ]\n```\n\n## CLI\n\n``` bash\n$ marked -o hello.html\nhello world\n^D\n$ cat hello.html\n<p>hello world</p>\n```\n\n## License\n\nCopyright (c) 2011-2013, Christopher Jeffrey. (MIT License)\n\nSee LICENSE for more info.\n","readmeFilename":"README.md","_id":"marked@0.2.7","dist":{"shasum":"d7551f61b4a93e59ec61ec62920feeffdf6fe0fe","tarball":"http://registry.npmjs.org/marked/-/marked-0.2.7.tgz"},"_npmVersion":"1.1.69","_npmUser":{"name":"chjj","email":"chjjeffrey@gmail.com"},"maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}},"0.2.8":{"name":"marked","description":"A markdown parser built for speed","author":{"name":"Christopher Jeffrey"},"version":"0.2.8","main":"./lib/marked.js","bin":{"marked":"./bin/marked"},"man":["./man/marked.1"],"preferGlobal":true,"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"homepage":"https://github.com/chjj/marked","bugs":{"url":"http://github.com/chjj/marked/issues"},"keywords":["markdown","markup","html"],"tags":["markdown","markup","html"],"scripts":{"test":"node test","bench":"node test --bench"},"readme":"# marked\n\nA full-featured markdown parser and compiler, written in javascript.\nBuilt for speed.\n\n## Benchmarks\n\nnode v0.4.x\n\n``` bash\n$ node test --bench\nmarked completed in 12071ms.\nshowdown (reuse converter) completed in 27387ms.\nshowdown (new converter) completed in 75617ms.\nmarkdown-js completed in 70069ms.\n```\n\nnode v0.6.x\n\n``` bash\n$ node test --bench\nmarked completed in 6448ms.\nmarked (gfm) completed in 7357ms.\nmarked (pedantic) completed in 6092ms.\ndiscount completed in 7314ms.\nshowdown (reuse converter) completed in 16018ms.\nshowdown (new converter) completed in 18234ms.\nmarkdown-js completed in 24270ms.\n```\n\n__Marked is now faster than Discount, which is written in C.__\n\nFor those feeling skeptical: These benchmarks run the entire markdown test suite\n1000 times. The test suite tests every feature. It doesn't cater to specific\naspects.\n\n## Install\n\n``` bash\n$ npm install marked\n```\n\n## Another Javascript Markdown Parser\n\nThe point of marked was to create a markdown compiler where it was possible to\nfrequently parse huge chunks of markdown without having to worry about\ncaching the compiled output somehow...or blocking for an unnecesarily long time.\n\nmarked is very concise and still implements all markdown features. It is also\nnow fully compatible with the client-side.\n\nmarked more or less passes the official markdown test suite in its\nentirety. This is important because a surprising number of markdown compilers\ncannot pass more than a few tests. It was very difficult to get marked as\ncompliant as it is. It could have cut corners in several areas for the sake\nof performance, but did not in order to be exactly what you expect in terms\nof a markdown rendering. In fact, this is why marked could be considered at a\ndisadvantage in the benchmarks above.\n\nAlong with implementing every markdown feature, marked also implements\n[GFM features](http://github.github.com/github-flavored-markdown/).\n\n## Options\n\nmarked has a few different switches which change behavior.\n\n- __pedantic__: Conform to obscure parts of `markdown.pl` as much as possible.\n  Don't fix any of the original markdown bugs or poor behavior.\n- __gfm__: Enable github flavored markdown (enabled by default).\n- __sanitize__: Sanitize the output. Ignore any HTML that has been input.\n- __highlight__: A callback to highlight code blocks.\n- __tables__: Enable GFM tables. This is enabled by default. (Requires the\n  `gfm` option in order to be enabled).\n- __breaks__: Enable GFM line breaks. Disabled by default.\n- __smartLists__: Use smarter list behavior than the original markdown.\n  Disabled by default. May eventually be default with the old behavior\n  moved into `pedantic`.\n- __langPrefix__: Set the prefix for code block classes. Defaults to `lang-`.\n\n## Usage\n\n``` js\n// Set default options\nmarked.setOptions({\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: true,\n  smartLists: true,\n  langPrefix: 'language-',\n  highlight: function(code, lang) {\n    if (lang === 'js') {\n      return highlighter.javascript(code);\n    }\n    return code;\n  }\n});\nconsole.log(marked('i am using __markdown__.'));\n```\n\nYou also have direct access to the lexer and parser if you so desire.\n\n``` js\nvar tokens = marked.lexer(text, options);\nconsole.log(marked.parser(tokens));\n```\n\n``` js\nvar lexer = new marked.Lexer(options);\nvar tokens = lexer.lex(text);\nconsole.log(tokens);\nconsole.log(lexer.rules);\n```\n\n``` bash\n$ node\n> require('marked').lexer('> i am using marked.')\n[ { type: 'blockquote_start' },\n  { type: 'paragraph',\n    text: 'i am using marked.' },\n  { type: 'blockquote_end' },\n  links: {} ]\n```\n\n## CLI\n\n``` bash\n$ marked -o hello.html\nhello world\n^D\n$ cat hello.html\n<p>hello world</p>\n```\n\n## License\n\nCopyright (c) 2011-2013, Christopher Jeffrey. (MIT License)\n\nSee LICENSE for more info.\n","readmeFilename":"README.md","_id":"marked@0.2.8","dist":{"shasum":"dddbcc38ed8182b680aaf9d7cebbe7b624976071","tarball":"http://registry.npmjs.org/marked/-/marked-0.2.8.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"chjj","email":"chjjeffrey@gmail.com"},"maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"directories":{}}},"maintainers":[{"name":"chjj","email":"chjjeffrey@gmail.com"}],"time":{"0.0.1":"2011-07-24T13:15:10.144Z","0.0.2":"2011-08-14T05:05:12.712Z","0.0.3":"2011-08-14T05:09:14.260Z","0.0.4":"2011-08-18T22:27:58.146Z","0.0.5":"2011-08-19T00:54:05.480Z","0.0.6":"2011-08-23T16:59:28.551Z","0.0.7":"2011-08-25T16:48:05.381Z","0.0.8":"2011-08-26T10:30:56.108Z","0.0.9":"2011-08-27T23:49:35.878Z","0.1.0":"2011-09-15T22:03:28.180Z","0.1.1":"2011-10-14T23:34:06.382Z","0.1.2":"2011-10-23T05:12:20.352Z","0.1.3":"2011-11-27T04:16:56.402Z","0.1.4":"2011-12-05T04:08:23.981Z","0.1.5":"2012-01-04T08:12:21.362Z","0.1.6":"2012-01-15T13:17:34.215Z","0.1.7":"2012-01-21T15:35:57.664Z","0.1.8":"2012-01-25T21:00:20.831Z","0.1.9":"2012-01-30T18:19:58.670Z","0.2.0":"2012-02-16T19:56:20.657Z","0.2.1":"2012-02-20T15:20:20.171Z","0.2.2":"2012-03-10T22:38:16.932Z","0.2.2-1":"2012-03-10T22:44:32.672Z","0.2.3":"2012-03-11T07:46:56.960Z","0.2.4":"2012-04-12T07:31:08.221Z","0.2.4-1":"2012-04-21T21:46:17.092Z","0.2.5":"2012-05-11T17:33:21.334Z","0.2.6":"2012-11-23T16:09:23.086Z","0.2.7":"2013-01-05T13:28:29.267Z","0.2.8":"2013-02-02T02:40:26.891Z"},"author":{"name":"Christopher Jeffrey"},"repository":{"type":"git","url":"git://github.com/chjj/marked.git"},"users":{"pvorb":true,"mmalecki":true,"fgribreau":true,"bencevans":true,"bryanburgers":true,"isao":true,"mattstyles":true,"jpoehls":true,"sbruchmann":true,"romac":true},"_attachments":{"marked-0.2.8.tgz":{"content_type":"application/octet-stream","revpos":71,"digest":"md5-cpMFphw8c5A57eQcgCp1xg==","length":10421,"stub":true},"marked-0.2.7.tgz":{"content_type":"application/octet-stream","revpos":69,"digest":"md5-yK4Rik42UI0a0YoFHhkYIw==","length":9855,"stub":true},"marked-0.2.6.tgz":{"content_type":"application/octet-stream","revpos":67,"digest":"md5-d4lylskVGvLw7fuGmkQL3w==","length":8062,"stub":true},"marked-0.2.5.tgz":{"content_type":"application/octet-stream","revpos":61,"digest":"md5-iADu3zPf0c49D2bH6aT+Jw==","length":8111,"stub":true},"marked-0.2.4-1.tgz":{"content_type":"application/octet-stream","revpos":59,"digest":"md5-mLupp119CunM2pxBnwmxjw==","length":8162,"stub":true},"marked-0.2.4.tgz":{"content_type":"application/octet-stream","revpos":57,"digest":"md5-BAfI8qL4xISFCsQgn7Q2IA==","length":8166,"stub":true},"marked-0.2.3.tgz":{"content_type":"application/octet-stream","revpos":55,"digest":"md5-w9S76OkmPGoP6e/SC/YA6Q==","length":8199,"stub":true},"marked-0.2.2-1.tgz":{"content_type":"application/octet-stream","revpos":53,"digest":"md5-rJzVjLt4EqUsmIdQoMfrKQ==","length":8198,"stub":true},"marked-0.2.2.tgz":{"content_type":"application/octet-stream","revpos":51,"digest":"md5-6o1PtscuokgQrVxxxn4BkQ==","length":8195,"stub":true},"marked-0.2.1.tgz":{"content_type":"application/octet-stream","revpos":49,"digest":"md5-SnBnyu0S+mkgUyqS6Jwt1Q==","length":8162,"stub":true},"marked-0.2.0.tgz":{"content_type":"application/octet-stream","revpos":47,"digest":"md5-izBa7N5sSvdi6Tg3nX+OBQ==","length":7344,"stub":true},"marked-0.1.9.tgz":{"content_type":"application/octet-stream","revpos":45,"digest":"md5-FrKuC1pbWqaYsbK19+lyvA==","length":7307,"stub":true},"marked-0.1.8.tgz":{"content_type":"application/octet-stream","revpos":43,"digest":"md5-Ap0J8EcBKgqK88tfRmrpJg==","length":6973,"stub":true},"marked-0.1.7.tgz":{"content_type":"application/octet-stream","revpos":41,"digest":"md5-7g9nmBniGBDnpMmg+pPoGQ==","length":6976,"stub":true},"marked-0.1.6.tgz":{"content_type":"application/octet-stream","revpos":38,"digest":"md5-r0BNIWjqL3AquTe5xuwukw==","length":7417,"stub":true},"marked-0.1.5.tgz":{"content_type":"application/octet-stream","revpos":36,"digest":"md5-bsqG5wuBhcG0cvpJhynOtQ==","length":7105,"stub":true},"marked-0.1.4.tgz":{"content_type":"application/octet-stream","revpos":33,"digest":"md5-NkIOst3IRu4L1JIu6Y/LHw==","length":57293,"stub":true},"marked-0.1.3.tgz":{"content_type":"application/octet-stream","revpos":27,"digest":"md5-GElr0Jd/bV2wXRdI5redjQ==","length":57332,"stub":true},"marked-0.1.2.tgz":{"content_type":"application/octet-stream","revpos":25,"digest":"md5-h7+rjMehWDUMsUuAKASN6g==","length":57374,"stub":true},"marked-0.1.1.tgz":{"content_type":"application/octet-stream","revpos":23,"digest":"md5-9P5NiXlQ2Fn7uDEGbhUfpw==","length":57523,"stub":true},"marked-0.1.0.tgz":{"content_type":"application/octet-stream","revpos":21,"digest":"md5-epBiL5TYpqD+xa+tn+zaoQ==","length":56906,"stub":true},"marked-0.0.9.tgz":{"content_type":"application/octet-stream","revpos":19,"digest":"md5-6adoM7tu91zqBGUAn7+y0Q==","length":56840,"stub":true},"marked-0.0.8.tgz":{"content_type":"application/octet-stream","revpos":17,"digest":"md5-owou4NHEtxAePgP9JdSPjQ==","length":56821,"stub":true},"marked-0.0.7.tgz":{"content_type":"application/octet-stream","revpos":15,"digest":"md5-ZHoyOsUKTTD14tt208IMgg==","length":56697,"stub":true},"marked-0.0.6.tgz":{"content_type":"application/octet-stream","revpos":13,"digest":"md5-8yO5ctRuBpLMNllXZ7YEag==","length":56668,"stub":true},"marked-0.0.5.tgz":{"content_type":"application/octet-stream","revpos":11,"digest":"md5-NW26aiwmtwUiuv84Mtj3iw==","length":6512,"stub":true},"marked-0.0.4.tgz":{"content_type":"application/octet-stream","revpos":9,"digest":"md5-5DN7ZqgiaS0RtJJjS5v4VA==","length":6481,"stub":true},"marked-0.0.3.tgz":{"content_type":"application/octet-stream","revpos":7,"digest":"md5-A4bUazh0TYtV48+ADEmYew==","length":6327,"stub":true},"marked-0.0.2.tgz":{"content_type":"application/octet-stream","revpos":5,"digest":"md5-9SOqtJjixslEVbxBcmTE9Q==","length":6336,"stub":true},"marked-0.0.1.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-hko4nxfwRLY6R+AulYlR4A==","length":4738,"stub":true}},"_etag":"\"3A95EQSF10ZU6B0G1V7M3PQ5P\""}